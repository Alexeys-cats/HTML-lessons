import { useState, useEffect } from 'react';
import ReacktImg from '../../public/ReacktImg.png';

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏–∏ Virtual DOM
const VirtualDOMDemo = () => {
  const [virtualDOM, setVirtualDOM] = useState({
    type: 'div',
    props: {
      className: 'container',
      children: [
        { type: 'h1', props: { children: 'Hello World' } },
        { type: 'p', props: { children: 'This is a paragraph' } },
      ],
    },
  });

  const [realDOM, setRealDOM] = useState(
    JSON.parse(JSON.stringify(virtualDOM))
  );
  const [showDiff, setShowDiff] = useState(false);
  const [isUpdating, setIsUpdating] = useState(false);

  const updateVirtualDOM = (newStructure: any) => {
    setIsUpdating(true);
    setVirtualDOM(newStructure);

    // –°–∏–º—É–ª—è—Ü–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞ reconciliation
    setTimeout(() => {
      setRealDOM(JSON.parse(JSON.stringify(newStructure)));
      setIsUpdating(false);
    }, 1000);
  };

  const addElement = () => {
    const newVirtualDOM = {
      ...virtualDOM,
      props: {
        ...virtualDOM.props,
        children: [
          ...virtualDOM.props.children,
          {
            type: 'p',
            props: {
              children: `New element ${virtualDOM.props.children.length + 1}`,
            },
          },
        ],
      },
    };
    updateVirtualDOM(newVirtualDOM);
  };

  const changeText = () => {
    const newVirtualDOM = {
      ...virtualDOM,
      props: {
        ...virtualDOM.props,
        children: virtualDOM.props.children.map((child: any, index: number) =>
          index === 0
            ? { ...child, props: { ...child.props, children: 'Updated Text' } }
            : child
        ),
      },
    };
    updateVirtualDOM(newVirtualDOM);
  };

  const changeClass = () => {
    const newVirtualDOM = {
      ...virtualDOM,
      props: {
        ...virtualDOM.props,
        className:
          virtualDOM.props.className === 'container'
            ? 'container updated'
            : 'container',
      },
    };
    updateVirtualDOM(newVirtualDOM);
  };

  const reset = () => {
    const originalStructure = {
      type: 'div',
      props: {
        className: 'container',
        children: [
          { type: 'h1', props: { children: 'Hello World' } },
          { type: 'p', props: { children: 'This is a paragraph' } },
        ],
      },
    };
    updateVirtualDOM(originalStructure);
  };

  return (
    <div className="space-y-6">
      <div className="bg-white/90 rounded-lg p-6 shadow-lg">
        <h3 className="text-xl font-bold text-[#2D2D2D] mb-4">
          –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Virtual DOM
        </h3>

        <div className="flex flex-wrap gap-2 mb-4">
          <button
            onClick={addElement}
            className="bg-[#00DBDB] hover:bg-[#00B8B8] text-white px-4 py-2 rounded-lg transition-colors"
          >
            –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
          </button>
          <button
            onClick={changeText}
            className="bg-[#FF6B6B] hover:bg-[#FF5252] text-white px-4 py-2 rounded-lg transition-colors"
          >
            –ò–∑–º–µ–Ω–∏—Ç—å —Ç–µ–∫—Å—Ç
          </button>
          <button
            onClick={changeClass}
            className="bg-[#4ECDC4] hover:bg-[#45B7AA] text-white px-4 py-2 rounded-lg transition-colors"
          >
            –ò–∑–º–µ–Ω–∏—Ç—å –∫–ª–∞—Å—Å
          </button>
          <button
            onClick={reset}
            className="bg-[#FF9F43] hover:bg-[#F39C12] text-white px-4 py-2 rounded-lg transition-colors"
          >
            –°–±—Ä–æ—Å–∏—Ç—å
          </button>
          <button
            onClick={() => setShowDiff(!showDiff)}
            className="bg-[#FFE66D] hover:bg-[#FFD93D] text-[#2D2D2D] px-4 py-2 rounded-lg transition-colors"
          >
            {showDiff ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'} –°—Ä–∞–≤–Ω–µ–Ω–∏–µ
          </button>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div>
            <h4 className="font-semibold text-[#2D2D2D] mb-3">Virtual DOM:</h4>
            <div className="bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-sm overflow-x-auto">
              <pre>{JSON.stringify(virtualDOM, null, 2)}</pre>
            </div>
          </div>

          <div>
            <h4 className="font-semibold text-[#2D2D2D] mb-3">Real DOM:</h4>
            <div
              className={`bg-gray-900 text-blue-400 p-4 rounded-lg font-mono text-sm overflow-x-auto ${isUpdating ? 'animate-pulse' : ''}`}
            >
              <pre>{JSON.stringify(realDOM, null, 2)}</pre>
            </div>
            {isUpdating && (
              <div className="mt-2 text-orange-500 text-sm">
                üîÑ –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Real DOM...
              </div>
            )}
          </div>
        </div>

        {showDiff && (
          <div className="mt-6">
            <h4 className="font-semibold text-[#2D2D2D] mb-3">
              –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Å—Ç—Ä—É–∫—Ç—É—Ä:
            </h4>
            <div className="bg-gray-900 text-yellow-400 p-4 rounded-lg font-mono text-sm">
              <div className="mb-2">
                // React —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç Virtual DOM —Å Real DOM
              </div>
              <div className="text-green-400">
                {JSON.stringify(virtualDOM) === JSON.stringify(realDOM)
                  ? '‚úÖ –°—Ç—Ä—É–∫—Ç—É—Ä—ã –∏–¥–µ–Ω—Ç–∏—á–Ω—ã'
                  : '‚ùå –û–±–Ω–∞—Ä—É–∂–µ–Ω—ã —Ä–∞–∑–ª–∏—á–∏—è'}
              </div>
              <div className="mt-2 text-blue-400">
                // React –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–∏–≤—à–∏–µ—Å—è —á–∞—Å—Ç–∏ Real DOM
              </div>
            </div>
          </div>
        )}
      </div>
    </div>
  );
};

// –ö–æ–º–ø–æ–Ω–µ–Ω—Ç –¥–ª—è –æ–±—ä—è—Å–Ω–µ–Ω–∏—è –ø—Ä–æ—Ü–µ—Å—Å–∞
const VirtualDOMProcess = () => {
  const [step, setStep] = useState(0);
  const [isAnimating, setIsAnimating] = useState(false);

  const steps = [
    {
      title: '1. –°–æ–∑–¥–∞–Ω–∏–µ Virtual DOM',
      description: 'React —Å–æ–∑–¥–∞–µ—Ç –ª–µ–≥–∫–æ–≤–µ—Å–Ω—É—é –∫–æ–ø–∏—é —Ä–µ–∞–ª—å–Ω–æ–≥–æ DOM –≤ –ø–∞–º—è—Ç–∏',
      code: `// Virtual DOM - JavaScript –æ–±—ä–µ–∫—Ç
const virtualDOM = {
  type: 'div',
  props: {
    className: 'container',
    children: [
      { type: 'h1', props: { children: 'Hello' } }
    ]
  }
};`,
    },
    {
      title: '2. –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è',
      description: '–ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ state React —Å–æ–∑–¥–∞–µ—Ç –Ω–æ–≤—ã–π Virtual DOM',
      code: `// –ù–æ–≤—ã–π Virtual DOM –ø–æ—Å–ª–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
const newVirtualDOM = {
  type: 'div',
  props: {
    className: 'container',
    children: [
      { type: 'h1', props: { children: 'Updated Hello' } }
    ]
  }
};`,
    },
    {
      title: '3. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ (Diffing)',
      description: 'React —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Ç–∞—Ä—ã–π –∏ –Ω–æ–≤—ã–π Virtual DOM',
      code: `// React –Ω–∞—Ö–æ–¥–∏—Ç —Ä–∞–∑–ª–∏—á–∏—è
const differences = {
  type: 'text',
  path: ['children', 0, 'props', 'children'],
  oldValue: 'Hello',
  newValue: 'Updated Hello'
};`,
    },
    {
      title: '4. –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ Real DOM',
      description: 'React –ø—Ä–∏–º–µ–Ω—è–µ—Ç —Ç–æ–ª—å–∫–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É DOM',
      code: `// React –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–∏–≤—à—É—é—Å—è —á–∞—Å—Ç—å
realDOM.children[0].props.children = 'Updated Hello';
// –ù–µ –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –≤–µ—Å—å DOM!`,
    },
  ];

  // const nextStep = () => {
  //   setIsAnimating(true);
  //   setTimeout(() => {
  //     setStep((prev) => (prev + 1) % steps.length);
  //     setIsAnimating(false);
  //   }, 300);
  // };

  // –∞–≤—Ç–æ–ø–ª–µ–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  // useEffect(() => {
  //   const interval = setInterval(nextStep, 5000);
  //   return () => clearInterval(interval);
  // }, []);

  return (
    <div className="bg-white/90 rounded-lg p-6 shadow-lg">
      <h3 className="text-xl font-bold text-[#2D2D2D] mb-4">
        –ü—Ä–æ—Ü–µ—Å—Å —Ä–∞–±–æ—Ç—ã Virtual DOM
      </h3>

      <div
        className={`transition-opacity duration-300 ${isAnimating ? 'opacity-50' : 'opacity-100'}`}
      >
        <h4 className="font-semibold text-[#00DBDB] mb-2">
          {steps[step].title}
        </h4>
        <p className="text-[#2D2D2D] mb-4">{steps[step].description}</p>

        <div className="bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-sm overflow-x-auto">
          <pre>{steps[step].code}</pre>
        </div>
      </div>

      <div className="flex justify-center mt-4 space-x-2">
        {steps.map((_, index) => (
          <button
            key={index}
            onClick={() => setStep(index)}
            className={`w-3 h-3 rounded-full transition-colors ${
              index === step ? 'bg-[#00DBDB]' : 'bg-gray-300'
            }`}
          />
        ))}
      </div>
    </div>
  );
};

export const VirtualDOM = () => {
  return (
    <div className="min-h-screen pt-24">
      <div className="max-w-[1200px] mx-auto px-6">
        <div className="w-full bg-gradient-to-r from-[#AEAEAE]/80 via-[#AEAEAE]/40 to-transparent rounded-xl py-8 px-6 relative">
          <div className="text-center mb-8">
            <h1 className="text-3xl sm:text-4xl md:text-5xl font-bold text-[#2D2D2D] mb-4">
              React <span className="text-[#00DBDB]">Virtual DOM</span>
            </h1>
            <p className="text-lg max-w-2xl mx-auto text-[#2D2D2D]">
              –ò–∑—É—á–∏—Ç–µ –∫–∞–∫ React –∏—Å–ø–æ–ª—å–∑—É–µ—Ç Virtual DOM –¥–ª—è —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ–≥–æ
              –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –ø–æ–ª—å–∑–æ–≤–∞—Ç–µ–ª—å—Å–∫–æ–≥–æ –∏–Ω—Ç–µ—Ä—Ñ–µ–π—Å–∞ –∏ –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏
              –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            </p>
            <div className="mt-6">
              <a
                href="/#/reconciliation"
                className="inline-block bg-[#FF6B6B] hover:bg-[#FF5252] text-white px-6 py-3 rounded-lg transition-colors"
              >
                ‚Üê –í–µ—Ä–Ω—É—Ç—å—Å—è –∫ Reconciliation
              </a>
            </div>
          </div>

          {/* Floating React logo */}
          <div className="hidden xl:block absolute top-8 right-8 animate-bounce">
            <img
              src={ReacktImg}
              alt="React"
              className="w-16 h-16 object-contain"
            />
          </div>

          {/* Main content */}
          <div className="space-y-8">
            <VirtualDOMDemo />
            <VirtualDOMProcess />

            {/* Key concepts */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="bg-white/90 rounded-lg p-6 shadow-lg">
                <h3 className="text-lg font-bold text-[#2D2D2D] mb-3">
                  –õ–µ–≥–∫–æ–≤–µ—Å–Ω–æ—Å—Ç—å
                </h3>
                <p className="text-[#2D2D2D] text-sm">
                  Virtual DOM - —ç—Ç–æ JavaScript –æ–±—ä–µ–∫—Ç, –∫–æ—Ç–æ—Ä—ã–π –Ω–∞–º–Ω–æ–≥–æ –±—ã—Å—Ç—Ä–µ–µ
                  –¥–ª—è –æ–ø–µ—Ä–∞—Ü–∏–π —á—Ç–µ–Ω–∏—è –∏ –∑–∞–ø–∏—Å–∏ —á–µ–º —Ä–µ–∞–ª—å–Ω—ã–π DOM
                </p>
              </div>

              <div className="bg-white/90 rounded-lg p-6 shadow-lg">
                <h3 className="text-lg font-bold text-[#2D2D2D] mb-3">
                  Batch Updates
                </h3>
                <p className="text-[#2D2D2D] text-sm">
                  React –≥—Ä—É–ø–ø–∏—Ä—É–µ—Ç –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è –≤ –æ–¥–∏–Ω –ø—Ä–æ—Ö–æ–¥,
                  –º–∏–Ω–∏–º–∏–∑–∏—Ä—É—è –∫–æ–ª–∏—á–µ—Å—Ç–≤–æ –æ–ø–µ—Ä–∞—Ü–∏–π —Å DOM
                </p>
              </div>

              <div className="bg-white/90 rounded-lg p-6 shadow-lg">
                <h3 className="text-lg font-bold text-[#2D2D2D] mb-3">
                  Diffing Algorithm
                </h3>
                <p className="text-[#2D2D2D] text-sm">
                  –£–º–Ω—ã–π –∞–ª–≥–æ—Ä–∏—Ç–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ
                  –∏–∑–º–µ–Ω–µ–Ω–∏—è –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ DOM
                </p>
              </div>
            </div>

            {/* Advantages */}
            <div className="bg-white/90 rounded-lg p-6 shadow-lg">
              <h3 className="text-xl font-bold text-[#2D2D2D] mb-4">
                –ü—Ä–µ–∏–º—É—â–µ—Å—Ç–≤–∞ Virtual DOM
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold text-[#00DBDB] mb-2">
                    üöÄ –ü—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç—å:
                  </h4>
                  <ul className="text-[#2D2D2D] text-sm space-y-1">
                    <li>‚Ä¢ –ë—ã—Å—Ç—Ä—ã–µ –æ–ø–µ—Ä–∞—Ü–∏–∏ —Å—Ä–∞–≤–Ω–µ–Ω–∏—è –≤ –ø–∞–º—è—Ç–∏</li>
                    <li>‚Ä¢ –ú–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ DOM</li>
                    <li>‚Ä¢ –ì—Ä—É–ø–ø–∏—Ä–æ–≤–∫–∞ –º–Ω–æ–∂–µ—Å—Ç–≤–µ–Ω–Ω—ã—Ö –∏–∑–º–µ–Ω–µ–Ω–∏–π</li>
                    <li>‚Ä¢ –û–ø—Ç–∏–º–∏–∑–∞—Ü–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–∞</li>
                  </ul>
                </div>
                <div>
                  <h4 className="font-semibold text-[#4ECDC4] mb-2">
                    üéØ –†–∞–∑—Ä–∞–±–æ—Ç–∫–∞:
                  </h4>
                  <ul className="text-[#2D2D2D] text-sm space-y-1">
                    <li>‚Ä¢ –î–µ–∫–ª–∞—Ä–∞—Ç–∏–≤–Ω—ã–π –ø–æ–¥—Ö–æ–¥ –∫ UI</li>
                    <li>‚Ä¢ –ê–≤—Ç–æ–º–∞—Ç–∏—á–µ—Å–∫–æ–µ —É–ø—Ä–∞–≤–ª–µ–Ω–∏–µ DOM</li>
                    <li>‚Ä¢ –ü—Ä–µ–¥—Å–∫–∞–∑—É–µ–º–æ–µ –ø–æ–≤–µ–¥–µ–Ω–∏–µ</li>
                    <li>‚Ä¢ –õ–µ–≥–∫–æ–µ —Ç–µ—Å—Ç–∏—Ä–æ–≤–∞–Ω–∏–µ</li>
                  </ul>
                </div>
              </div>
            </div>

            {/* How it works */}
            <div className="bg-white/90 rounded-lg p-6 shadow-lg">
              <h3 className="text-xl font-bold text-[#2D2D2D] mb-4">
                –ö–∞–∫ —ç—Ç–æ —Ä–∞–±–æ—Ç–∞–µ—Ç
              </h3>
              <div className="space-y-4">
                <div className="flex items-center space-x-4">
                  <div className="w-8 h-8 bg-[#00DBDB] rounded-full flex items-center justify-center text-white font-bold">
                    1
                  </div>
                  <div>
                    <h4 className="font-semibold text-[#2D2D2D]">
                      –°–æ–∑–¥–∞–Ω–∏–µ Virtual DOM
                    </h4>
                    <p className="text-[#2D2D2D] text-sm">
                      React —Å–æ–∑–¥–∞–µ—Ç JavaScript –æ–±—ä–µ–∫—Ç, –ø—Ä–µ–¥—Å—Ç–∞–≤–ª—è—é—â–∏–π —Å—Ç—Ä—É–∫—Ç—É—Ä—É
                      UI
                    </p>
                  </div>
                </div>
                <div className="flex items-center space-x-4">
                  <div className="w-8 h-8 bg-[#00DBDB] rounded-full flex items-center justify-center text-white font-bold">
                    2
                  </div>
                  <div>
                    <h4 className="font-semibold text-[#2D2D2D]">
                      –ò–∑–º–µ–Ω–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                    </h4>
                    <p className="text-[#2D2D2D] text-sm">
                      –ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ state —Å–æ–∑–¥–∞–µ—Ç—Å—è –Ω–æ–≤—ã–π Virtual DOM
                    </p>
                  </div>
                </div>
                <div className="flex items-center space-x-4">
                  <div className="w-8 h-8 bg-[#00DBDB] rounded-full flex items-center justify-center text-white font-bold">
                    3
                  </div>
                  <div>
                    <h4 className="font-semibold text-[#2D2D2D]">–°—Ä–∞–≤–Ω–µ–Ω–∏–µ</h4>
                    <p className="text-[#2D2D2D] text-sm">
                      React —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Å—Ç–∞—Ä—ã–π –∏ –Ω–æ–≤—ã–π Virtual DOM
                    </p>
                  </div>
                </div>
                <div className="flex items-center space-x-4">
                  <div className="w-8 h-8 bg-[#00DBDB] rounded-full flex items-center justify-center text-white font-bold">
                    4
                  </div>
                  <div>
                    <h4 className="font-semibold text-[#2D2D2D]">
                      –û–±–Ω–æ–≤–ª–µ–Ω–∏–µ DOM
                    </h4>
                    <p className="text-[#2D2D2D] text-sm">
                      –ü—Ä–∏–º–µ–Ω—è—é—Ç—Å—è —Ç–æ–ª—å–∫–æ –Ω–∞–π–¥–µ–Ω–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è –∫ —Ä–µ–∞–ª—å–Ω–æ–º—É DOM
                    </p>
                  </div>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
