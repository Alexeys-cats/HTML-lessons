import { useState, useEffect } from 'react';
import ReacktImg from '../../public/ReacktImg.png';

const ReconciliationDemo = () => {
  const [items, setItems] = useState(['Item 1', 'Item 2', 'Item 3']);
  const [key, setKey] = useState(0);
  const [showDiff, setShowDiff] = useState(false);
  const [previousItems, setPreviousItems] = useState([
    'Item 1',
    'Item 2',
    'Item 3',
  ]);
  const [diffMode, setDiffMode] = useState<'normal' | 'withKey'>('normal');

  const addItem = () => {
    setPreviousItems([...items]);
    setItems([...items, `Item ${items.length + 1}`]);
  };

  const removeItem = (index: number) => {
    setPreviousItems([...items]);
    setItems(items.filter((_, i) => i !== index));
  };

  const shuffleItems = () => {
    setPreviousItems([...items]);
    setItems([...items].sort(() => Math.random() - 0.5));
  };

  const resetWithKey = () => {
    setPreviousItems([...items]);
    setKey((prev) => prev + 1);
    setItems(['Item 1', 'Item 2', 'Item 3']);
    setDiffMode('withKey');
  };

  const resetNormal = () => {
    setPreviousItems([...items]);
    setItems(['Item 1', 'Item 2', 'Item 3']);
    setDiffMode('normal');
  };

  // –ì–µ–Ω–µ—Ä–∏—Ä—É–µ–º diff –º–µ–∂–¥—É —Å—Ç–∞—Ä—ã–º –∏ –Ω–æ–≤—ã–º —Å–æ—Å—Ç–æ—è–Ω–∏–µ–º
  const generateDiff = () => {
    if (diffMode === 'withKey') {
      return {
        type: 'key-change' as const,
        message: '–ü—Ä–∏ –∏–∑–º–µ–Ω–µ–Ω–∏–∏ key React –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –í–°–ï —ç–ª–µ–º–µ–Ω—Ç—ã',
        oldItems: previousItems,
        newItems: items,
        explanation: 'React –≤–∏–¥–∏—Ç –Ω–æ–≤—ã–µ key –∏ —Å—á–∏—Ç–∞–µ—Ç –≤—Å–µ —ç–ª–µ–º–µ–Ω—Ç—ã –Ω–æ–≤—ã–º–∏',
      };
    }

    const added = items.filter((item) => !previousItems.includes(item));
    const removed = previousItems.filter((item) => !items.includes(item));
    const moved = items.filter(
      (item, index) =>
        previousItems.includes(item) && previousItems.indexOf(item) !== index
    );

    return {
      type: 'normal' as const,
      added,
      removed,
      moved,
      oldItems: previousItems,
      newItems: items,
      explanation:
        added.length > 0 || removed.length > 0
          ? 'React –¥–æ–±–∞–≤–ª—è–µ—Ç/—É–¥–∞–ª—è–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã'
          : moved.length > 0
            ? 'React –ø–µ—Ä–µ–º–µ—â–∞–µ—Ç —Å—É—â–µ—Å—Ç–≤—É—é—â–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã'
            : '–ò–∑–º–µ–Ω–µ–Ω–∏–π –Ω–µ—Ç',
    };
  };

  const diff = generateDiff();

  return (
    <div className="space-y-6">
      <div className="bg-white/90 rounded-lg p-6 shadow-lg">
        <h3 className="text-xl font-bold text-[#2D2D2D] mb-4">
          –ò–Ω—Ç–µ—Ä–∞–∫—Ç–∏–≤–Ω–∞—è –¥–µ–º–æ–Ω—Å—Ç—Ä–∞—Ü–∏—è Reconciliation
        </h3>

        <div className="flex flex-wrap gap-2 mb-4">
          <button
            onClick={addItem}
            className="bg-[#00DBDB] hover:bg-[#00B8B8] text-white px-4 py-2 rounded-lg transition-colors"
          >
            –î–æ–±–∞–≤–∏—Ç—å —ç–ª–µ–º–µ–Ω—Ç
          </button>
          <button
            onClick={shuffleItems}
            className="bg-[#FF6B6B] hover:bg-[#FF5252] text-white px-4 py-2 rounded-lg transition-colors"
          >
            –ü–µ—Ä–µ–º–µ—à–∞—Ç—å
          </button>
          <button
            onClick={resetNormal}
            className="bg-[#4ECDC4] hover:bg-[#45B7AA] text-white px-4 py-2 rounded-lg transition-colors"
          >
            –°–±—Ä–æ—Å–∏—Ç—å (–æ–±—ã—á–Ω–æ)
          </button>
          <button
            onClick={resetWithKey}
            className="bg-[#FF9F43] hover:bg-[#F39C12] text-white px-4 py-2 rounded-lg transition-colors"
          >
            –°–±—Ä–æ—Å–∏—Ç—å —Å –Ω–æ–≤—ã–º key
          </button>
          <button
            onClick={() => setShowDiff(!showDiff)}
            className="bg-[#FFE66D] hover:bg-[#FFD93D] text-[#2D2D2D] px-4 py-2 rounded-lg transition-colors"
          >
            {showDiff ? '–°–∫—Ä—ã—Ç—å' : '–ü–æ–∫–∞–∑–∞—Ç—å'} Diff
          </button>
        </div>

        <div className="grid grid-cols-1 lg:grid-cols-2 gap-6">
          <div>
            <h4 className="font-semibold text-[#2D2D2D] mb-3">
              –¢–µ–∫—É—â–∏–π —Å–ø–∏—Å–æ–∫:
            </h4>
            <div className="space-y-2">
              {items.map((item, index) => (
                <div
                  key={
                    diffMode === 'withKey'
                      ? `new-key-${index}`
                      : `${key}-${index}`
                  }
                  className="flex items-center justify-between bg-gray-100 p-3 rounded-lg"
                >
                  <span className="text-[#2D2D2D]">{item}</span>
                  <button
                    onClick={() => removeItem(index)}
                    className="text-red-500 hover:text-red-700 text-sm"
                  >
                    ‚úï
                  </button>
                </div>
              ))}
            </div>
          </div>

          {showDiff && (
            <div>
              <h4 className="font-semibold text-[#2D2D2D] mb-3">
                Virtual DOM Diff:
              </h4>
              <div className="bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-sm">
                {diff.type === 'key-change' ? (
                  <>
                    <div className="text-red-400 mb-2">‚ö†Ô∏è –ò–∑–º–µ–Ω–µ–Ω–∏–µ key:</div>
                    <div className="text-yellow-400 mb-2">
                      {diff.oldItems.map((item, index) => (
                        <div key={index} className="ml-4 text-gray-400">
                          &lt;div key="old-key-{index}"&gt;{item}&lt;/div&gt; ‚ùå
                          –£–¥–∞–ª–µ–Ω–æ
                        </div>
                      ))}
                    </div>
                    <div className="text-green-400">
                      {diff.newItems.map((item, index) => (
                        <div key={index} className="ml-4">
                          &lt;div key="new-key-{index}"&gt;{item}&lt;/div&gt; ‚úÖ
                          –°–æ–∑–¥–∞–Ω–æ
                        </div>
                      ))}
                    </div>
                    <div className="mt-2 text-blue-400">
                      // React –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç –í–°–ï —ç–ª–µ–º–µ–Ω—Ç—ã –∏–∑-–∑–∞ –Ω–æ–≤—ã—Ö key
                    </div>
                  </>
                ) : (
                  <>
                    <div className="text-blue-400 mb-2">
                      üìä –û–±—ã—á–Ω–æ–µ —Å—Ä–∞–≤–Ω–µ–Ω–∏–µ:
                    </div>
                    {diff.added && diff.added.length > 0 && (
                      <div className="text-green-400 mb-2">
                        <div>‚úÖ –î–æ–±–∞–≤–ª–µ–Ω–æ:</div>
                        {diff.added.map((item, index) => (
                          <div key={index} className="ml-4">
                            &lt;div&gt;{item}&lt;/div&gt;
                          </div>
                        ))}
                      </div>
                    )}
                    {diff.removed && diff.removed.length > 0 && (
                      <div className="text-red-400 mb-2">
                        <div>‚ùå –£–¥–∞–ª–µ–Ω–æ:</div>
                        {diff.removed.map((item, index) => (
                          <div key={index} className="ml-4 text-gray-400">
                            &lt;div&gt;{item}&lt;/div&gt;
                          </div>
                        ))}
                      </div>
                    )}
                    {diff.moved && diff.moved.length > 0 && (
                      <div className="text-yellow-400 mb-2">
                        <div>üîÑ –ü–µ—Ä–µ–º–µ—â–µ–Ω–æ:</div>
                        {diff.moved.map((item, index) => (
                          <div key={index} className="ml-4">
                            &lt;div&gt;{item}&lt;/div&gt;
                          </div>
                        ))}
                      </div>
                    )}
                    <div className="mt-2 text-blue-400">
                      // React –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å –æ–¥–∏–Ω–∞–∫–æ–≤—ã–º–∏ key
                    </div>
                  </>
                )}
              </div>

              <div className="mt-4 p-3 bg-blue-50 rounded-lg">
                <h5 className="font-semibold text-[#2D2D2D] mb-2">
                  –û–±—ä—è—Å–Ω–µ–Ω–∏–µ:
                </h5>
                <p className="text-[#2D2D2D] text-sm">{diff.explanation}</p>
              </div>
            </div>
          )}
        </div>
      </div>
    </div>
  );
};

const DiffingAlgorithm = () => {
  const [step, setStep] = useState(0);
  const [isAnimating, setIsAnimating] = useState(false);

  const steps = [
    {
      title: '1. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ —Ç–∏–ø–æ–≤ —ç–ª–µ–º–µ–Ω—Ç–æ–≤',
      description: 'React —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç —Ç–∏–ø—ã —ç–ª–µ–º–µ–Ω—Ç–æ–≤ (div, span, –∫–æ–º–ø–æ–Ω–µ–Ω—Ç)',
      code: `// –°—Ç–∞—Ä—ã–π —ç–ª–µ–º–µ–Ω—Ç
<div className="item">Hello</div>

// –ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç  
<span className="item">Hello</span>

// React –ø–µ—Ä–µ—Å–æ–∑–¥–∞–µ—Ç —ç–ª–µ–º–µ–Ω—Ç –ø–æ–ª–Ω–æ—Å—Ç—å—é`,
    },
    {
      title: '2. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ props',
      description: 'React —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç props –∏ –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ –∏–∑–º–µ–Ω–∏–≤—à–∏–µ—Å—è',
      code: `// –°—Ç–∞—Ä—ã–π —ç–ª–µ–º–µ–Ω—Ç
<div className="item" style={{color: 'red'}}>Hello</div>

// –ù–æ–≤—ã–π —ç–ª–µ–º–µ–Ω—Ç
<div className="item" style={{color: 'blue'}}>Hello</div>

// React –æ–±–Ω–æ–≤–ª—è–µ—Ç —Ç–æ–ª—å–∫–æ style`,
    },
    {
      title: '3. –°—Ä–∞–≤–Ω–µ–Ω–∏–µ children',
      description: 'React —Ä–µ–∫—É—Ä—Å–∏–≤–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞–µ—Ç –¥–æ—á–µ—Ä–Ω–∏–µ —ç–ª–µ–º–µ–Ω—Ç—ã',
      code: `// –°—Ç–∞—Ä—ã–π —Å–ø–∏—Å–æ–∫
<ul>
  <li key="1">Item 1</li>
  <li key="2">Item 2</li>
</ul>

// –ù–æ–≤—ã–π —Å–ø–∏—Å–æ–∫
<ul>
  <li key="1">Item 1</li>
  <li key="3">Item 3</li>
  <li key="2">Item 2</li>
</ul>

// React –ø–µ—Ä–µ–∏—Å–ø–æ–ª—å–∑—É–µ—Ç —ç–ª–µ–º–µ–Ω—Ç—ã —Å key="1" –∏ key="2"`,
    },
  ];

  //   const nextStep = () => {
  //     setIsAnimating(true);
  //     setTimeout(() => {
  //       setStep((prev) => (prev + 1) % steps.length);
  //       setIsAnimating(false);
  //     }, 300);
  //   };

  // –∞–≤—Ç–æ–ø–ª–µ–π –µ—Å–ª–∏ –Ω—É–∂–Ω–æ
  // useEffect(() => {
  //   const interval = setInterval(nextStep, 4000);
  //   return () => clearInterval(interval);
  // }, []);

  return (
    <div className="bg-white/90 rounded-lg p-6 shadow-lg">
      <h3 className="text-xl font-bold text-[#2D2D2D] mb-4">
        –ê–ª–≥–æ—Ä–∏—Ç–º Diffing
      </h3>

      <div
        className={`transition-opacity duration-300 ${isAnimating ? 'opacity-50' : 'opacity-100'}`}
      >
        <h4 className="font-semibold text-[#00DBDB] mb-2">
          {steps[step].title}
        </h4>
        <p className="text-[#2D2D2D] mb-4">{steps[step].description}</p>

        <div className="bg-gray-900 text-green-400 p-4 rounded-lg font-mono text-sm overflow-x-auto">
          <pre>{steps[step].code}</pre>
        </div>
      </div>

      <div className="flex justify-center mt-4 space-x-2">
        {steps.map((_, index) => (
          <button
            key={index}
            onClick={() => setStep(index)}
            className={`w-3 h-3 rounded-full transition-colors ${
              index === step ? 'bg-[#00DBDB]' : 'bg-gray-300'
            }`}
          />
        ))}
      </div>
    </div>
  );
};

export const Reconcilation = () => {
  return (
    <div className="min-h-screen pt-24">
      <div className="max-w-[1200px] mx-auto px-6">
        <div className="w-full bg-gradient-to-r from-[#AEAEAE]/80 via-[#AEAEAE]/40 to-transparent rounded-xl py-8 px-6 relative">
          <div className="text-center mb-8">
            <h1 className="text-3xl sm:text-4xl md:text-5xl font-bold text-[#2D2D2D] mb-4">
              React <span className="text-[#00DBDB]">Reconciliation</span>
            </h1>
            <p className="text-lg max-w-2xl mx-auto text-[#2D2D2D]">
              –ò–∑—É—á–∏—Ç–µ –∫–∞–∫ React —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ –æ–±–Ω–æ–≤–ª—è–µ—Ç DOM, —Å—Ä–∞–≤–Ω–∏–≤–∞—è Virtual DOM
              –∏ –ø—Ä–∏–º–µ–Ω—è—è –∞–ª–≥–æ—Ä–∏—Ç–º diffing –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏ –ø—Ä–æ–∏–∑–≤–æ–¥–∏—Ç–µ–ª—å–Ω–æ—Å—Ç–∏
            </p>
          </div>

          {/* Floating React logo */}
          <div className="hidden xl:block absolute top-8 right-8 animate-bounce">
            <img
              src={ReacktImg}
              alt="React"
              className="w-16 h-16 object-contain"
            />
          </div>

          {/* Main content */}
          <div className="space-y-8">
            <ReconciliationDemo />
            <DiffingAlgorithm />

            {/* Key concepts */}
            <div className="grid grid-cols-1 md:grid-cols-3 gap-6">
              <div className="bg-white/90 rounded-lg p-6 shadow-lg">
                <h3 className="text-lg font-bold text-[#2D2D2D] mb-3">
                  Virtual DOM
                </h3>
                <p className="text-[#2D2D2D] text-sm">
                  –õ–µ–≥–∫–æ–≤–µ—Å–Ω–∞—è –∫–æ–ø–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ DOM, –∫–æ—Ç–æ—Ä–∞—è –ø–æ–∑–≤–æ–ª—è–µ—Ç React
                  —ç—Ñ—Ñ–µ–∫—Ç–∏–≤–Ω–æ —Å—Ä–∞–≤–Ω–∏–≤–∞—Ç—å –∏–∑–º–µ–Ω–µ–Ω–∏—è
                </p>
                <div className="mt-4">
                  <a
                    href="/#/virtual-dom"
                    className="inline-block bg-[#00DBDB] hover:bg-[#00B8B8] text-white px-4 py-2 rounded-lg transition-colors text-sm"
                  >
                    –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ ‚Üí
                  </a>
                </div>
              </div>

              <div className="bg-white/90 rounded-lg p-6 shadow-lg">
                <h3 className="text-lg font-bold text-[#2D2D2D] mb-3">
                  Diffing Algorithm
                </h3>
                <p className="text-[#2D2D2D] text-sm">
                  –ê–ª–≥–æ—Ä–∏—Ç–º —Å—Ä–∞–≤–Ω–µ–Ω–∏—è, –∫–æ—Ç–æ—Ä—ã–π –æ–ø—Ä–µ–¥–µ–ª—è–µ—Ç –º–∏–Ω–∏–º–∞–ª—å–Ω—ã–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è
                  –¥–ª—è –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è —Ä–µ–∞–ª—å–Ω–æ–≥–æ DOM
                </p>
                <div className="mt-4">
                  <a
                    href="/#/diffing-algorithm"
                    className="inline-block bg-[#00DBDB] hover:bg-[#00B8B8] text-white px-4 py-2 rounded-lg transition-colors text-sm"
                  >
                    –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ ‚Üí
                  </a>
                </div>
              </div>

              <div className="bg-white/90 rounded-lg p-6 shadow-lg">
                <h3 className="text-lg font-bold text-[#2D2D2D] mb-3">Fiber</h3>
                <p className="text-[#2D2D2D] text-sm">
                  –ù–æ–≤–∞—è –∞—Ä—Ö–∏—Ç–µ–∫—Ç—É—Ä–∞ React –¥–ª—è —É–ø—Ä–∞–≤–ª–µ–Ω–∏—è —Ä–µ–Ω–¥–µ—Ä–∏–Ω–≥–æ–º,
                  –ø–æ–∑–≤–æ–ª—è—é—â–∞—è –ø—Ä–µ—Ä—ã–≤–∞—Ç—å –∏ –≤–æ–∑–æ–±–Ω–æ–≤–ª—è—Ç—å —Ä–∞–±–æ—Ç—É
                </p>
                <div className="mt-4">
                  <a
                    href="/#/fiber"
                    className="inline-block bg-[#00DBDB] hover:bg-[#00B8B8] text-white px-4 py-2 rounded-lg transition-colors text-sm"
                  >
                    –£–∑–Ω–∞—Ç—å –±–æ–ª—å—à–µ ‚Üí
                  </a>
                </div>
              </div>
            </div>

            {/* Best practices */}
            <div className="bg-white/90 rounded-lg p-6 shadow-lg">
              <h3 className="text-xl font-bold text-[#2D2D2D] mb-4">
                –õ—É—á—à–∏–µ –ø—Ä–∞–∫—Ç–∏–∫–∏
              </h3>
              <div className="grid grid-cols-1 md:grid-cols-2 gap-6">
                <div>
                  <h4 className="font-semibold text-[#00DBDB] mb-2">
                    ‚úÖ –ß—Ç–æ –¥–µ–ª–∞—Ç—å:
                  </h4>
                  <ul className="text-[#2D2D2D] text-sm space-y-1">
                    <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ —Å—Ç–∞–±–∏–ª—å–Ω—ã–µ key –¥–ª—è —Å–ø–∏—Å–∫–æ–≤</li>
                    <li>‚Ä¢ –ò–∑–±–µ–≥–∞–π—Ç–µ –∏–∑–º–µ–Ω–µ–Ω–∏—è key –ø—Ä–∏ –æ–±–Ω–æ–≤–ª–µ–Ω–∏—è—Ö</li>
                    <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑—É–π—Ç–µ React.memo –¥–ª—è –æ–ø—Ç–∏–º–∏–∑–∞—Ü–∏–∏</li>
                    <li>‚Ä¢ –†–∞–∑–º–µ—â–∞–π—Ç–µ state –∫–∞–∫ –º–æ–∂–Ω–æ –≤—ã—à–µ –≤ –¥–µ—Ä–µ–≤–µ</li>
                  </ul>
                </div>
                <div>
                  <h4 className="font-semibold text-[#FF6B6B] mb-2">
                    ‚ùå –ß–µ–≥–æ –∏–∑–±–µ–≥–∞—Ç—å:
                  </h4>
                  <ul className="text-[#2D2D2D] text-sm space-y-1">
                    <li>‚Ä¢ –ò—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ index –∫–∞–∫ key</li>
                    <li>‚Ä¢ –ò–∑–º–µ–Ω–µ–Ω–∏–µ key –ø—Ä–∏ –∫–∞–∂–¥–æ–º —Ä–µ–Ω–¥–µ—Ä–µ</li>
                    <li>‚Ä¢ –°–æ–∑–¥–∞–Ω–∏–µ –æ–±—ä–µ–∫—Ç–æ–≤ –≤ render</li>
                    <li>‚Ä¢ –ù–µ–ø—Ä–∞–≤–∏–ª—å–Ω–æ–µ –∏—Å–ø–æ–ª—å–∑–æ–≤–∞–Ω–∏–µ useEffect</li>
                  </ul>
                </div>
              </div>
            </div>
          </div>
        </div>
      </div>
    </div>
  );
};
