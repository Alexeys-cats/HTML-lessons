name: Check-and-build Code
on:
  push:
    branches:
      - main
  pull_request:
    branches:
      - main
permissions:
  contents: read
  issues: write
  pull-requests: write

jobs:
  ci:
    runs-on: ubuntu-latest
    steps:
      - name: Checkout code
        uses: actions/checkout@v4

      - name: Set up Node.js
        uses: actions/setup-node@v4
        with:
          node-version: '22'

      - name: Install dependencies
        run: npm ci

      - name: Lint code
        id: lint
        run: |
          npm run lint > lint.log 2>&1 || true
          tail -n 50 lint.log | npx strip-ansi > lint.clean.log
          cat lint.clean.log
          if grep -q "error" lint.clean.log; then echo "::set-output name=lint_status::❌"; else echo "::set-output name=lint_status::✅"; fi
          echo "lint_result<<EOF" >> $GITHUB_OUTPUT
          cat lint.clean.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run Prettier check
        id: prettier
        run: |
          npm run format:check > prettier.log 2>&1 || true
          tail -n 50 prettier.log | npx strip-ansi > prettier.clean.log
          cat prettier.clean.log
          if grep -q "code style issues found" prettier.clean.log; then echo "::set-output name=prettier_status::❌"; else echo "::set-output name=prettier_status::✅"; fi
          echo "prettier_result<<EOF" >> $GITHUB_OUTPUT
          cat prettier.clean.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Run typescript type checks
        id: typecheck
        run: |
          npm run typecheck > typecheck.log 2>&1 || true
          tail -n 50 typecheck.log | npx strip-ansi > typecheck.clean.log
          cat typecheck.clean.log
          if grep -q "error" typecheck.clean.log; then echo "::set-output name=typecheck_status::❌"; else echo "::set-output name=typecheck_status::✅"; fi
          echo "typecheck_result<<EOF" >> $GITHUB_OUTPUT
          cat typecheck.clean.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Build React app
        id: build
        run: |
          npm run build:ci > build.log 2>&1 || true
          tail -n 50 build.log | npx strip-ansi > build.clean.log
          cat build.clean.log
          if grep -q "error" build.clean.log; then echo "::set-output name=build_status::❌"; else echo "::set-output name=build_status::✅"; fi
          echo "build_result<<EOF" >> $GITHUB_OUTPUT
          cat build.clean.log >> $GITHUB_OUTPUT
          echo "EOF" >> $GITHUB_OUTPUT

      - name: Generate summary for PR
        if: github.event_name == 'pull_request'
        run: |
          echo '### CI Summary' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo '✅ Проверка завершена!' >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo "#### Линтинг: ${{ steps.lint.outputs.lint_status }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.lint.outputs.lint_result }}" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo "#### Prettier: ${{ steps.prettier.outputs.prettier_status }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.prettier.outputs.prettier_result }}" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo "#### Typecheck: ${{ steps.typecheck.outputs.typecheck_status }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.typecheck.outputs.typecheck_result }}" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo "#### Build: ${{ steps.build.outputs.build_status }}" >> $GITHUB_STEP_SUMMARY
          echo "${{ steps.build.outputs.build_result }}" >> $GITHUB_STEP_SUMMARY
          echo '' >> $GITHUB_STEP_SUMMARY
          echo "- [Логи CI](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})" >> $GITHUB_STEP_SUMMARY

      - name: Comment PR with check result
        if: github.event_name == 'pull_request'
        uses: marocchino/sticky-pull-request-comment@v2
        with:
          header: check-result
          message: |
            ✅ Проверка завершена!
            
            #### Линтинг: ${{ steps.lint.outputs.lint_status }}
            ${{ steps.lint.outputs.lint_result }}
            
            #### Prettier: ${{ steps.prettier.outputs.prettier_status }}
            ${{ steps.prettier.outputs.prettier_result }}
            
            #### Typecheck: ${{ steps.typecheck.outputs.typecheck_status }}
            ${{ steps.typecheck.outputs.typecheck_result }}
            
            #### Build: ${{ steps.build.outputs.build_status }}
            ${{ steps.build.outputs.build_result }}
            
            [Логи CI](${{ github.server_url }}/${{ github.repository }}/actions/runs/${{ github.run_id }})
