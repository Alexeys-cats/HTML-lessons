[
    {
      "question": "Что такое DOM в контексте веб-разработки?",
      "options": [
          "Документ объектной модели",
          "Динамический оператор метода",
          "Дополнительный оптимизированный модуль",
          "Детальный обработчик метаданных"
      ],
      "correctAnswer": 0,
      "explanation": "DOM (Document Object Model) - это программный интерфейс, который представляет HTML-документ в виде древовидной структуры объектов.",
      "theme": "js"
  },
  {
      "question": "Какой метод используется для поиска элемента по ID?",
      "options": [
          "document.findElementById()",
          "document.getElementById()",
          "document.querySelector('#id')",
          "document.getElementByName()"
      ],
      "correctAnswer": 1,
      "explanation": "document.getElementById() - стандартный метод для поиска элемента по его уникальному идентификатору.",
      "theme": "js"
  },
  {
      "question": "Как добавить новый класс к элементу с помощью JavaScript?",
      "options": [
          "element.class += 'новый-класс'",
          "element.className += 'новый-класс'",
          "element.classList.add('новый-класс')",
          "element.addClassName('новый-класс')"
      ],
      "correctAnswer": 2,
      "explanation": "element.classList.add() - современный метод для добавления класса к элементу.",
      "theme": "js"
  },
  {
      "question": "Какой метод используется для создания нового элемента в DOM?",
      "options": [
          "document.createElement()",
          "document.newElement()",
          "document.addElement()",
          "document.makeElement()"
      ],
      "correctAnswer": 0,
      "explanation": "document.createElement() создает новый HTML-элемент, который затем можно добавить в DOM.",
      "theme": "js"
  },
  {
      "question": "Как добавить созданный элемент в DOM?",
      "options": [
          "document.append(element)",
          "document.body.appendChild(element)",
          "element.appendTo(document.body)",
          "document.body.insert(element)"
      ],
      "correctAnswer": 1,
      "explanation": "appendChild() добавляет элемент как последний дочерний элемент к указанному родителю.",
      "theme": "js"
  },
  {
      "question": "Как удалить элемент из DOM?",
      "options": [
          "element.delete()",
          "document.removeElement(element)",
          "element.remove()",
          "document.deleteNode(element)"
      ],
      "correctAnswer": 2,
      "explanation": "element.remove() - современный метод для удаления элемента из DOM.",
      "theme": "js"
  },
  {
      "question": "Какой метод используется для добавления обработчика события?",
      "options": [
          "element.addEventListener()",
          "element.attachEvent()",
          "element.on()",
          "element.handleEvent()"
      ],
      "correctAnswer": 0,
      "explanation": "addEventListener() - стандартный метод для назначения обработчика события элементу.",
      "theme": "js"
  },
  {
      "question": "Что такое событийное делегирование?",
      "options": [
          "Передача события от одного элемента к другому",
          "Назначение нескольких обработчиков на одно событие",
          "Обработка событий на родительском элементе вместо дочерних",
          "Отмена стандартного поведения событий"
      ],
      "correctAnswer": 2,
      "explanation": "Событийное делегирование - это техника, когда обработчик назначается родительскому элементу вместо множества дочерних, что улучшает производительность.",
      "theme": "js"
  },
  {
      "question": "Как изменить стиль элемента с помощью JavaScript?",
      "options": [
          "element.style = 'color: red'",
          "element.css('color', 'red')",
          "element.style.color = 'red'",
          "element.setStyle('color', 'red')"
      ],
      "correctAnswer": 2,
      "explanation": "element.style.имя_свойства позволяет изменять инлайн-стили элемента.",
      "theme": "js"
  },
  {
      "question": "Что делает метод querySelector?",
      "options": [
          "Возвращает все элементы, соответствующие CSS-селектору",
          "Возвращает первый элемент, соответствующий CSS-селектору",
          "Возвращает элемент по его ID",
          "Возвращает коллекцию элементов по их имени тега"
      ],
      "correctAnswer": 1,
      "explanation": "querySelector() возвращает первый элемент, который соответствует указанному CSS-селектору.",
      "theme": "js"
  },
  {
      "question": "Как получить значение атрибута элемента?",
      "options": [
          "element.value('атрибут')",
          "element.getAttribute('атрибут')",
          "element.атрибут",
          "element.getProperty('атрибут')"
      ],
      "correctAnswer": 1,
      "explanation": "getAttribute() возвращает значение указанного атрибута элемента.",
      "theme": "js"
  },
  {
      "question": "Какой метод используется для получения всех элементов по CSS-селектору?",
      "options": [
          "document.getElements()",
          "document.querySelectorAll()",
          "document.getElementsBySelector()",
          "document.findAll()"
      ],
      "correctAnswer": 1,
      "explanation": "querySelectorAll() возвращает статический NodeList, содержащий все элементы, соответствующие CSS-селектору.",
      "theme": "js"
  },
  {
      "question": "Что означает 'всплытие событий' (event bubbling)?",
      "options": [
          "Распространение события от родительского элемента к дочерним",
          "Распространение события от дочернего элемента к родительским",
          "Отмена события до его обработки",
          "Создание нескольких одинаковых событий одновременно"
      ],
      "correctAnswer": 1,
      "explanation": "Всплытие - это механизм распространения события от элемента, на котором оно возникло, вверх по дереву DOM к родителям.",
      "theme": "js"
  },
  {
      "question": "Как клонировать содержимое HTML-шаблона?",
      "options": [
          "template.copy(true)",
          "template.clone()",
          "template.content.cloneNode(true)",
          "template.duplicate()"
      ],
      "correctAnswer": 2,
      "explanation": "content.cloneNode(true) возвращает полную копию содержимого шаблона, включая все дочерние элементы.",
      "theme": "js"
  },
  {
      "question": "Как получить текст элемента в JavaScript?",
      "options": [
          "element.innerHTML",
          "element.textContent",
          "element.value",
          "element.innerText"
      ],
      "correctAnswer": 1,
      "explanation": "textContent возвращает текстовое содержимое элемента, включая скрытые элементы, без HTML-разметки.",
      "theme": "js"
  },
  {
      "question": "Как запретить стандартное поведение события?",
      "options": [
          "event.stopPropagation()",
          "event.preventDefault()",
          "event.cancel()",
          "event.stop()"
      ],
      "correctAnswer": 1,
      "explanation": "preventDefault() предотвращает стандартное поведение события, например, отправку формы.",
      "theme": "js"
  },
  {
      "question": "Что такое JSON в JavaScript?",
      "options": [
          "Формат обмена данными",
          "Библиотека для анимации",
          "Тип переменной",
          "Метод для DOM"
      ],
      "correctAnswer": 0,
      "explanation": "JSON (JavaScript Object Notation) - это формат для обмена данными, основанный на JavaScript-объектах.",
      "theme": "js"
  },
  {
      "question": "Как преобразовать строку в число в JavaScript?",
      "options": [
          "parseInt(string)",
          "string.toNumber()",
          "convert(string)",
          "Number.parse(string)"
      ],
      "correctAnswer": 0,
      "explanation": "parseInt() преобразует строку в целое число, а parseFloat() - в число с плавающей точкой.",
      "theme": "js"
  },
  {
      "question": "Что такое замыкание в JavaScript?",
      "options": [
          "Функция, которая запоминает свои внешние переменные",
          "Метод для закрытия окна",
          "Тип данных",
          "Событие DOM"
      ],
      "correctAnswer": 0,
      "explanation": "Замыкание - это функция, которая имеет доступ к переменным из своей внешней области видимости даже после завершения внешней функции.",
      "theme": "js"
  },
  {
      "question": "Как выполнить код через определенное время?",
      "options": [
          "setTimeout(function, delay)",
          "delay(function, time)",
          "setInterval(function, delay)",
          "wait(function, time)"
      ],
      "correctAnswer": 0,
      "explanation": "setTimeout() выполняет функцию один раз после указанной задержки в миллисекундах.",
      "theme": "js"
  },
  {
      "question": "Что такое Promise в JavaScript?",
      "options": [
          "Объект для асинхронных операций",
          "Тип данных для массивов",
          "Метод для DOM",
          "Функция для циклов"
      ],
      "correctAnswer": 0,
      "explanation": "Promise представляет результат асинхронной операции, который может быть выполнен, отклонен или находиться в ожидании.",
      "theme": "js"
  },
  {
      "question": "Как получить текущую дату в JavaScript?",
      "options": [
          "new Date()",
          "Date.now()",
          "getDate()",
          "currentDate()"
      ],
      "correctAnswer": 0,
      "explanation": "new Date() создает объект с текущей датой и временем.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.map()?",
      "options": [
          "Метод для удаления элементов",
          "Метод для создания нового массива с результатами функции",
          "Метод для сортировки",
          "Метод для объединения массивов"
      ],
      "correctAnswer": 1,
      "explanation": "map() создает новый массив, применяя функцию к каждому элементу исходного массива.",
      "theme": "js"
  },
  {
      "question": "Как проверить, является ли переменная массивом?",
      "options": [
          "typeof variable === 'array'",
          "variable.isArray()",
          "Array.isArray(variable)",
          "variable instanceof Array"
      ],
      "correctAnswer": 2,
      "explanation": "Array.isArray() - надежный способ проверки, является ли значение массивом.",
      "theme": "js"
  },
  {
      "question": "Что такое async/await в JavaScript?",
      "options": [
          "Синтаксис для работы с асинхронными функциями",
          "Метод для циклов",
          "Тип данных",
          "Событие DOM"
      ],
      "correctAnswer": 0,
      "explanation": "async/await упрощает работу с асинхронными операциями, делая код похожим на синхронный.",
      "theme": "js"
  },
  {
      "question": "Как добавить элемент в конец массива?",
      "options": [
          "array.add(element)",
          "array.push(element)",
          "array.append(element)",
          "array.insert(element)"
      ],
      "correctAnswer": 1,
      "explanation": "Метод push() добавляет элемент в конец массива.",
      "theme": "js"
  },
  {
      "question": "Что такое localStorage в JavaScript?",
      "options": [
          "Объект для хранения данных в браузере",
          "Тип данных",
          "Метод для DOM",
          "Библиотека для анимации"
      ],
      "correctAnswer": 0,
      "explanation": "localStorage позволяет сохранять ключ-значение данные в браузере без истечения срока действия.",
      "theme": "js"
  },
  {
      "question": "Как удалить обработчик события в JavaScript?",
      "options": [
          "element.removeEventListener()",
          "element.detachEvent()",
          "element.off()",
          "element.cancelEvent()"
      ],
      "correctAnswer": 0,
      "explanation": "removeEventListener() удаляет ранее назначенный обработчик события.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.filter()?",
      "options": [
          "Метод для сортировки массива",
          "Метод для создания нового массива с элементами, прошедшими проверку",
          "Метод для объединения массивов",
          "Метод для удаления элементов"
      ],
      "correctAnswer": 1,
      "explanation": "filter() создает новый массив, содержащий только элементы, удовлетворяющие условию функции.",
      "theme": "js"
  },
  {
      "question": "Как получить ширину элемента в JavaScript?",
      "options": [
          "element.width",
          "element.offsetWidth",
          "element.style.width",
          "element.getWidth()"
      ],
      "correctAnswer": 1,
      "explanation": "offsetWidth возвращает ширину элемента, включая padding, border и scrollbar.",
      "theme": "js"
  },
  {
      "question": "Что такое событие load в JavaScript?",
      "options": [
          "Событие при клике на элемент",
          "Событие при полной загрузке ресурса",
          "Событие при отправке формы",
          "Событие при наведении мыши"
      ],
      "correctAnswer": 1,
      "explanation": "Событие load срабатывает, когда ресурс (например, страница или изображение) полностью загружен.",
      "theme": "js"
  },
  {
      "question": "Как изменить содержимое элемента в JavaScript?",
      "options": [
          "element.innerHTML = 'новый текст'",
          "element.text = 'новый текст'",
          "element.content = 'новый текст'",
          "element.value = 'новый текст'"
      ],
      "correctAnswer": 0,
      "explanation": "innerHTML позволяет изменять HTML-содержимое элемента, включая теги.",
      "theme": "js"
  },
  {
      "question": "Что делает метод Array.reduce() в JavaScript?",
      "options": [
          "Создает новый массив",
          "Сокращает массив до одного значения",
          "Сортирует массив",
          "Фильтрует элементы массива"
      ],
      "correctAnswer": 1,
      "explanation": "reduce() применяет функцию к каждому элементу массива, сводя его к одному значению, например, сумме.",
      "theme": "js"
  },
  {
      "question": "Как получить родительский элемент в JavaScript?",
      "options": [
          "element.parentNode",
          "element.parent",
          "element.root",
          "element.getParent()"
      ],
      "correctAnswer": 0,
      "explanation": "parentNode возвращает родительский узел элемента в DOM-дереве.",
      "theme": "js"
  },
  {
      "question": "Что такое метод fetch() в JavaScript?",
      "options": [
          "Метод для выполнения циклов",
          "Метод для выполнения HTTP-запросов",
          "Метод для работы с массивами",
          "Метод для управления DOM"
      ],
      "correctAnswer": 1,
      "explanation": "fetch() используется для выполнения асинхронных HTTP-запросов, возвращая Promise.",
      "theme": "js"
  },
  {
      "question": "Как проверить наличие класса у элемента?",
      "options": [
          "element.hasClass('class')",
          "element.classList.contains('class')",
          "element.className.includes('class')",
          "element.containsClass('class')"
      ],
      "correctAnswer": 1,
      "explanation": "classList.contains() проверяет, есть ли указанный класс у элемента.",
      "theme": "js"
  },
  {
      "question": "Что такое событие click в JavaScript?",
      "options": [
          "Событие при наведении мыши",
          "Событие при клике на элемент",
          "Событие при загрузке страницы",
          "Событие при изменении поля"
      ],
      "correctAnswer": 1,
      "explanation": "Событие click срабатывает, когда пользователь кликает на элемент.",
      "theme": "js"
  },
  {
      "question": "Как преобразовать объект в строку JSON?",
      "options": [
          "JSON.stringify(object)",
          "object.toJSON()",
          "JSON.parse(object)",
          "object.stringify()"
      ],
      "correctAnswer": 0,
      "explanation": "JSON.stringify() преобразует JavaScript-объект в строку в формате JSON.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.forEach()?",
      "options": [
          "Метод для фильтрации массива",
          "Метод для выполнения функции для каждого элемента",
          "Метод для сортировки массива",
          "Метод для объединения массивов"
      ],
      "correctAnswer": 1,
      "explanation": "forEach() выполняет указанную функцию для каждого элемента массива, не создавая новый массив.",
      "theme": "js"
  },
  {
      "question": "Как остановить распространение события в JavaScript?",
      "options": [
          "event.preventDefault()",
          "event.stopPropagation()",
          "event.cancel()",
          "event.stop()"
      ],
      "correctAnswer": 1,
      "explanation": "stopPropagation() предотвращает дальнейшее всплытие события по DOM-дереву.",
      "theme": "js"
  },
  {
      "question": "Что такое sessionStorage в JavaScript?",
      "options": [
          "Объект для хранения данных на время сессии",
          "Метод для управления DOM",
          "Тип данных",
          "Библиотека для анимации"
      ],
      "correctAnswer": 0,
      "explanation": "sessionStorage сохраняет данные в браузере до закрытия вкладки.",
      "theme": "js"
  },
  {
      "question": "Как получить все дочерние элементы в JavaScript?",
      "options": [
          "element.children",
          "element.childNodes",
          "element.getChildren()",
          "element.nodes"
      ],
      "correctAnswer": 0,
      "explanation": "element.children возвращает коллекцию дочерних HTML-элементов, исключая текстовые узлы.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.slice()?",
      "options": [
          "Метод для удаления элементов",
          "Метод для копирования части массива",
          "Метод для сортировки массива",
          "Метод для объединения массивов"
      ],
      "correctAnswer": 1,
      "explanation": "slice() возвращает новый массив, содержащий копию части исходного массива.",
      "theme": "js"
  },
  {
      "question": "Как добавить атрибут элементу в JavaScript?",
      "options": [
          "element.setAttribute('name', 'value')",
          "element.addAttribute('name', 'value')",
          "element.attribute('name', 'value')",
          "element.set('name', 'value')"
      ],
      "correctAnswer": 0,
      "explanation": "setAttribute() устанавливает значение указанного атрибута для элемента.",
      "theme": "js"
  },
  {
      "question": "Что такое событие input в JavaScript?",
      "options": [
          "Событие при клике на элемент",
          "Событие при изменении значения поля ввода",
          "Событие при загрузке страницы",
          "Событие при наведении мыши"
      ],
      "correctAnswer": 1,
      "explanation": "Событие input срабатывает при каждом изменении значения в поле ввода.",
      "theme": "js"
  },
  {
      "question": "Как получить координаты элемента на странице?",
      "options": [
          "element.getBoundingClientRect()",
          "element.getPosition()",
          "element.offset()",
          "element.coords()"
      ],
      "correctAnswer": 0,
      "explanation": "getBoundingClientRect() возвращает объект с координатами и размерами элемента относительно окна браузера.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.find()?",
      "options": [
          "Метод для сортировки массива",
          "Метод для поиска первого элемента, удовлетворяющего условию",
          "Метод для объединения массивов",
          "Метод для удаления элементов"
      ],
      "correctAnswer": 1,
      "explanation": "find() возвращает первый элемент массива, удовлетворяющий условию функции, или undefined.",
      "theme": "js"
  },
  {
      "question": "Как выполнить код с регулярным интервалом?",
      "options": [
          "setTimeout(function, delay)",
          "setInterval(function, delay)",
          "delay(function, time)",
          "repeat(function, time)"
      ],
      "correctAnswer": 1,
      "explanation": "setInterval() выполняет функцию повторно через заданный интервал в миллисекундах.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.includes()?",
      "options": [
          "Метод для добавления элементов",
          "Метод для проверки наличия элемента в массиве",
          "Метод для сортировки массива",
          "Метод для объединения массивов"
      ],
      "correctAnswer": 1,
      "explanation": "includes() проверяет, содержит ли массив указанный элемент, возвращая true или false.",
      "theme": "js"
  },
  {
      "question": "Как очистить интервал в JavaScript?",
      "options": [
          "clearInterval(id)",
          "stopInterval(id)",
          "cancelInterval(id)",
          "clearTimeout(id)"
      ],
      "correctAnswer": 0,
      "explanation": "clearInterval() останавливает выполнение функции, запущенной через setInterval(), по её идентификатору.",
      "theme": "js"
  },
  {
      "question": "Что такое метод document.createTextNode()?",
      "options": [
          "Метод для создания текстового узла",
          "Метод для создания элемента",
          "Метод для удаления текста",
          "Метод для изменения стилей"
      ],
      "correctAnswer": 0,
      "explanation": "createTextNode() создает текстовый узел, который можно добавить к элементу в DOM.",
      "theme": "js"
  },
  {
      "question": "Как получить значение поля формы в JavaScript?",
      "options": [
          "element.value",
          "element.text",
          "element.content",
          "element.innerValue"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство value возвращает или устанавливает значение поля формы, например, <input>.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.sort()?",
      "options": [
          "Метод для фильтрации массива",
          "Метод для сортировки элементов массива",
          "Метод для объединения массивов",
          "Метод для удаления элементов"
      ],
      "correctAnswer": 1,
      "explanation": "sort() сортирует элементы массива, опционально с функцией сравнения.",
      "theme": "js"
  },
  {
      "question": "Как проверить, существует ли элемент в DOM?",
      "options": [
          "document.exists(element)",
          "element !== null",
          "element.isPresent()",
          "document.contains(element)"
      ],
      "correctAnswer": 1,
      "explanation": "Проверка element !== null после выборки (например, getElementById) подтверждает существование элемента.",
      "theme": "js"
  },
  {
      "question": "Что такое метод document.createDocumentFragment()?",
      "options": [
          "Метод для создания пустого DOM-дерева",
          "Метод для создания фрагмента документа",
          "Метод для удаления элементов",
          "Метод для копирования DOM"
      ],
      "correctAnswer": 1,
      "explanation": "createDocumentFragment() создает легковесный контейнер для временного хранения узлов перед добавлением в DOM.",
      "theme": "js"
  },
  {
      "question": "Как получить URL текущей страницы в JavaScript?",
      "options": [
          "window.location.href",
          "document.url",
          "window.url",
          "location.path"
      ],
      "correctAnswer": 0,
      "explanation": "window.location.href возвращает полный URL текущей страницы.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.join()?",
      "options": [
          "Метод для добавления элементов",
          "Метод для объединения элементов массива в строку",
          "Метод для сортировки массива",
          "Метод для фильтрации массива"
      ],
      "correctAnswer": 1,
      "explanation": "join() объединяет элементы массива в строку с указанным разделителем.",
      "theme": "js"
  },
  {
      "question": "Как заменить элемент в DOM?",
      "options": [
          "element.replaceWith(newElement)",
          "element.replace(newElement)",
          "element.swap(newElement)",
          "element.change(newElement)"
      ],
      "correctAnswer": 0,
      "explanation": "replaceWith() заменяет элемент в DOM на новый элемент или узел.",
      "theme": "js"
  },
  {
      "question": "Что такое событие submit в JavaScript?",
      "options": [
          "Событие при клике на элемент",
          "Событие при отправке формы",
          "Событие при загрузке страницы",
          "Событие при наведении мыши"
      ],
      "correctAnswer": 1,
      "explanation": "Событие submit срабатывает при отправке формы, например, при нажатии кнопки submit.",
      "theme": "js"
  },
  {
      "question": "Как получить первый дочерний элемент в JavaScript?",
      "options": [
          "element.firstChild",
          "element.firstElement",
          "element.child[0]",
          "element.getFirst()"
      ],
      "correctAnswer": 0,
      "explanation": "firstChild возвращает первый дочерний узел, включая текстовые узлы; для элементов лучше использовать firstElementChild.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.concat()?",
      "options": [
          "Метод для сортировки массива",
          "Метод для объединения двух или более массивов",
          "Метод для фильтрации массива",
          "Метод для удаления элементов"
      ],
      "correctAnswer": 1,
      "explanation": "concat() создает новый массив, объединяя исходный массив с другими массивами или значениями.",
      "theme": "js"
  },
  {
      "question": "Как изменить заголовок страницы в JavaScript?",
      "options": [
          "document.title = 'Новый заголовок'",
          "document.head.title = 'Новый заголовок'",
          "window.title = 'Новый заголовок'",
          "document.setTitle('Новый заголовок')"
      ],
      "correctAnswer": 0,
      "explanation": "document.title изменяет текст в теге <title>, отображаемый на вкладке браузера.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.every()?",
      "options": [
          "Метод для проверки, удовлетворяют ли все элементы условию",
          "Метод для сортировки массива",
          "Метод для объединения массивов",
          "Метод для удаления элементов"
      ],
      "correctAnswer": 0,
      "explanation": "every() возвращает true, если все элементы массива удовлетворяют условию функции.",
      "theme": "js"
  },
  {
      "question": "Как получить последний дочерний элемент в JavaScript?",
      "options": [
          "element.lastChild",
          "element.lastElement",
          "element.child[-1]",
          "element.getLast()"
      ],
      "correctAnswer": 0,
      "explanation": "lastChild возвращает последний дочерний узел; для элементов лучше использовать lastElementChild.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.some()?",
      "options": [
          "Метод для проверки, удовлетворяет ли хотя бы один элемент условию",
          "Метод для сортировки массива",
          "Метод для объединения массивов",
          "Метод для удаления элементов"
      ],
      "correctAnswer": 0,
      "explanation": "some() возвращает true, если хотя бы один элемент массива удовлетворяет условию функции.",
      "theme": "js"
  },
  {
      "question": "Как удалить атрибут элемента в JavaScript?",
      "options": [
          "element.removeAttribute('name')",
          "element.deleteAttribute('name')",
          "element.clearAttribute('name')",
          "element.remove('name')"
      ],
      "correctAnswer": 0,
      "explanation": "removeAttribute() удаляет указанный атрибут из элемента.",
      "theme": "js"
  },
  {
      "question": "Что такое событие mouseover в JavaScript?",
      "options": [
          "Событие при клике на элемент",
          "Событие при наведении мыши на элемент",
          "Событие при отправке формы",
          "Событие при загрузке страницы"
      ],
      "correctAnswer": 1,
      "explanation": "Событие mouseover срабатывает, когда курсор мыши входит в область элемента.",
      "theme": "js"
  },
  {
      "question": "Как получить список всех классов элемента?",
      "options": [
          "element.classList",
          "element.classes",
          "element.getClasses()",
          "element.classNames"
      ],
      "correctAnswer": 0,
      "explanation": "classList возвращает объект DOMTokenList, содержащий все классы элемента.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.reverse()?",
      "options": [
          "Метод для сортировки массива",
          "Метод для изменения порядка элементов на обратный",
          "Метод для фильтрации массива",
          "Метод для объединения массивов"
      ],
      "correctAnswer": 1,
      "explanation": "reverse() изменяет порядок элементов в массиве на обратный, модифицируя исходный массив.",
      "theme": "js"
  },
  {
      "question": "Как получить значение CSS-свойства элемента?",
      "options": [
          "getComputedStyle(element).getPropertyValue('property')",
          "element.style.get('property')",
          "element.getStyle('property')",
          "window.getStyle(element, 'property')"
      ],
      "correctAnswer": 0,
      "explanation": "getComputedStyle() возвращает вычисленные стили элемента, а getPropertyValue() извлекает значение свойства.",
      "theme": "js"
  },
  {
      "question": "Как добавить элемент в начало массива?",
      "options": [
          "array.addFirst(element)",
          "array.unshift(element)",
          "array.insert(element)",
          "array.prepend(element)"
      ],
      "correctAnswer": 1,
      "explanation": "unshift() добавляет элемент в начало массива, сдвигая остальные элементы.",
      "theme": "js"
  },
  {
      "question": "Что такое событие keydown в JavaScript?",
      "options": [
          "Событие при отпускании клавиши",
          "Событие при нажатии клавиши",
          "Событие при вводе текста",
          "Событие при фокусе"
      ],
      "correctAnswer": 1,
      "explanation": "Событие keydown срабатывает, когда пользователь нажимает клавишу на клавиатуре.",
      "theme": "js"
  },
  {
      "question": "Как преобразовать строку JSON в объект?",
      "options": [
          "JSON.parse(string)",
          "string.toObject()",
          "JSON.stringify(string)",
          "object.parse(string)"
      ],
      "correctAnswer": 0,
      "explanation": "JSON.parse() преобразует строку JSON в JavaScript-объект.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.splice()?",
      "options": [
          "Метод для копирования массива",
          "Метод для добавления или удаления элементов в массиве",
          "Метод для сортировки массива",
          "Метод для фильтрации массива"
      ],
      "correctAnswer": 1,
      "explanation": "splice() изменяет массив, добавляя или удаляя элементы с указанной позиции.",
      "theme": "js"
  },
  {
      "question": "Как получить доступ к данным data-* атрибутов?",
      "options": [
          "element.dataset",
          "element.data",
          "element.getData()",
          "element.attributes.data"
      ],
      "correctAnswer": 0,
      "explanation": "dataset предоставляет объект с данными из data-* атрибутов, например, element.dataset.name.",
      "theme": "js"
  },
  {
      "question": "Что такое метод window.alert()?",
      "options": [
          "Метод для отображения диалогового окна",
          "Метод для изменения стилей",
          "Метод для выполнения HTTP-запросов",
          "Метод для работы с массивами"
      ],
      "correctAnswer": 0,
      "explanation": "window.alert() отображает простое диалоговое окно с сообщением и кнопкой OK.",
      "theme": "js"
  },
  {
      "question": "Как получить текущий путь URL без домена?",
      "options": [
          "window.location.pathname",
          "window.location.href",
          "document.path",
          "location.url"
      ],
      "correctAnswer": 0,
      "explanation": "window.location.pathname возвращает путь URL, например, '/page' для 'example.com/page'.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.pop()?",
      "options": [
          "Метод для добавления элемента в конец",
          "Метод для удаления последнего элемента",
          "Метод для сортировки массива",
          "Метод для фильтрации массива"
      ],
      "correctAnswer": 1,
      "explanation": "pop() удаляет и возвращает последний элемент массива.",
      "theme": "js"
  },
  {
      "question": "Как проверить, поддерживает ли браузер API?",
      "options": [
          "'api' in window",
          "window.hasAPI('api')",
          "browser.supports('api')",
          "api.exists()"
      ],
      "correctAnswer": 0,
      "explanation": "Оператор in проверяет наличие свойства (API) в объекте window, например, 'geolocation' in navigator.",
      "theme": "js"
  },
  {
      "question": "Что такое метод window.confirm()?",
      "options": [
          "Метод для отображения диалогового окна с подтверждением",
          "Метод для изменения стилей",
          "Метод для выполнения HTTP-запросов",
          "Метод для работы с массивами"
      ],
      "correctAnswer": 0,
      "explanation": "window.confirm() отображает диалоговое окно с кнопками OK и Cancel, возвращая true или false.",
      "theme": "js"
  },
  {
      "question": "Как получить высоту элемента в JavaScript?",
      "options": [
          "element.height",
          "element.offsetHeight",
          "element.style.height",
          "element.getHeight()"
      ],
      "correctAnswer": 1,
      "explanation": "offsetHeight возвращает высоту элемента, включая padding, border и scrollbar.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.shift()?",
      "options": [
          "Метод для добавления элемента в начало",
          "Метод для удаления первого элемента",
          "Метод для сортировки массива",
          "Метод для фильтрации массива"
      ],
      "correctAnswer": 1,
      "explanation": "shift() удаляет и возвращает первый элемент массива, сдвигая остальные.",
      "theme": "js"
  },
  {
      "question": "Как перезагрузить страницу в JavaScript?",
      "options": [
          "window.location.reload()",
          "document.refresh()",
          "window.refresh()",
          "location.restart()"
      ],
      "correctAnswer": 0,
      "explanation": "window.location.reload() перезагружает текущую страницу.",
      "theme": "js"
  },
  {
      "question": "Что такое метод window.prompt()?",
      "options": [
          "Метод для отображения окна с полем ввода",
          "Метод для изменения стилей",
          "Метод для выполнения HTTP-запросов",
          "Метод для работы с массивами"
      ],
      "correctAnswer": 0,
      "explanation": "window.prompt() отображает диалоговое окно с полем ввода текста, возвращая введенное значение или null.",
      "theme": "js"
  },
  {
      "question": "Как получить доступ к форме по её имени?",
      "options": [
          "document.forms['name']",
          "document.getForm('name')",
          "document.form('name')",
          "window.forms['name']"
      ],
      "correctAnswer": 0,
      "explanation": "document.forms['name'] возвращает форму с указанным атрибутом name.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Object.keys()?",
      "options": [
          "Метод для сортировки объекта",
          "Метод для получения массива ключей объекта",
          "Метод для объединения объектов",
          "Метод для удаления ключей"
      ],
      "correctAnswer": 1,
      "explanation": "Object.keys() возвращает массив строк, представляющих ключи перечисляемых свойств объекта.",
      "theme": "js"
  },
  {
      "question": "Как проверить тип переменной в JavaScript?",
      "options": [
          "typeof variable",
          "variable.type()",
          "getType(variable)",
          "variable instanceof Type"
      ],
      "correctAnswer": 0,
      "explanation": "Оператор typeof возвращает строку, указывающую тип переменной, например, 'string' или 'object'.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Array.indexOf()?",
      "options": [
          "Метод для добавления элемента",
          "Метод для поиска индекса элемента в массиве",
          "Метод для сортировки массива",
          "Метод для фильтрации массива"
      ],
      "correctAnswer": 1,
      "explanation": "indexOf() возвращает первый индекс элемента в массиве или -1, если элемент не найден.",
      "theme": "js"
  },
  {
      "question": "Как создать копию объекта в JavaScript?",
      "options": [
          "Object.copy(object)",
          "Object.assign({}, object)",
          "object.clone()",
          "new Object(object)"
      ],
      "correctAnswer": 1,
      "explanation": "Object.assign({}, object) создает поверхностную копию объекта.",
      "theme": "js"
  },
  {
      "question": "Что такое событие focus в JavaScript?",
      "options": [
          "Событие при клике на элемент",
          "Событие при получении элементом фокуса",
          "Событие при отправке формы",
          "Событие при наведении мыши"
      ],
      "correctAnswer": 1,
      "explanation": "Событие focus срабатывает, когда элемент, например, поле ввода, получает фокус.",
      "theme": "js"
  },
  {
      "question": "Как объединить два объекта в JavaScript?",
      "options": [
          "Object.merge(obj1, obj2)",
          "Object.assign(obj1, obj2)",
          "obj1.concat(obj2)",
          "obj1 + obj2"
      ],
      "correctAnswer": 1,
      "explanation": "Object.assign() копирует свойства из одного объекта в другой, объединяя их.",
      "theme": "js"
  },
  {
      "question": "Что такое метод String.split()?",
      "options": [
          "Метод для объединения строк",
          "Метод для разделения строки на массив",
          "Метод для замены подстроки",
          "Метод для обрезки строки"
      ],
      "correctAnswer": 1,
      "explanation": "split() разделяет строку на массив подстрок на основе указанного разделителя.",
      "theme": "js"
  },
  {
      "question": "Как получить случайное число в JavaScript?",
      "options": [
          "Math.random()",
          "Random.number()",
          "Math.rand()",
          "Number.random()"
      ],
      "correctAnswer": 0,
      "explanation": "Math.random() возвращает случайное число от 0 (включительно) до 1 (исключительно).",
      "theme": "js"
  },
  {
      "question": "Что такое метод document.getElementsByTagName()?",
      "options": [
          "Метод для поиска элементов по классу",
          "Метод для поиска элементов по имени тега",
          "Метод для поиска элементов по ID",
          "Метод для создания элементов"
      ],
      "correctAnswer": 1,
      "explanation": "getElementsByTagName() возвращает коллекцию элементов с указанным именем тега, например, 'div'.",
      "theme": "js"
  },
  {
      "question": "Как округлить число до ближайшего целого в JavaScript?",
      "options": [
          "Math.round(number)",
          "Math.floor(number)",
          "Math.ceil(number)",
          "Math.trunc(number)"
      ],
      "correctAnswer": 0,
      "explanation": "Math.round() округляет число до ближайшего целого, например, 3.6 становится 4.",
      "theme": "js"
  },
  {
      "question": "Что такое событие blur в JavaScript?",
      "options": [
          "Событие при клике на элемент",
          "Событие при потере фокуса элементом",
          "Событие при отправке формы",
          "Событие при наведении мыши"
      ],
      "correctAnswer": 1,
      "explanation": "Событие blur срабатывает, когда элемент, например, поле ввода, теряет фокус.",
      "theme": "js"
  },
  {
      "question": "Как проверить, является ли значение объектом?",
      "options": [
          "typeof value === 'object' && value !== null",
          "value instanceof Object",
          "isObject(value)",
          "value.type === 'object'"
      ],
      "correctAnswer": 0,
      "explanation": "typeof возвращает 'object' для объектов, но нужно исключить null, так как typeof null === 'object'.",
      "theme": "js"
  },
  {
      "question": "Что такое метод String.replace()?",
      "options": [
          "Метод для объединения строк",
          "Метод для замены подстроки в строке",
          "Метод для разделения строки",
          "Метод для обрезки строки"
      ],
      "correctAnswer": 1,
      "explanation": "replace() заменяет первое вхождение подстроки или шаблона на новое значение.",
      "theme": "js"
  },
  {
      "question": "Как получить длину строки в JavaScript?",
      "options": [
          "string.length",
          "string.size()",
          "string.count()",
          "length(string)"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство length возвращает количество символов в строке.",
      "theme": "js"
  },
  {
      "question": "Что такое метод document.getElementsByClassName()?",
      "options": [
          "Метод для поиска элементов по ID",
          "Метод для поиска элементов по классу",
          "Метод для поиска элементов по тегу",
          "Метод для создания элементов"
      ],
      "correctAnswer": 1,
      "explanation": "getElementsByClassName() возвращает коллекцию элементов с указанным классом.",
      "theme": "js"
  },
  {
      "question": "Как получить минимальное значение из массива?",
      "options": [
          "Math.min(...array)",
          "array.min()",
          "Math.minimum(array)",
          "array.reduceMin()"
      ],
      "correctAnswer": 0,
      "explanation": "Math.min() с оператором spread (...) возвращает минимальное значение из массива.",
      "theme": "js"
  },
  {
      "question": "Что такое метод String.toUpperCase()?",
      "options": [
          "Метод для преобразования строки в нижний регистр",
          "Метод для преобразования строки в верхний регистр",
          "Метод для обрезки строки",
          "Метод для замены подстроки"
      ],
      "correctAnswer": 1,
      "explanation": "toUpperCase() преобразует все символы строки в верхний регистр.",
      "theme": "js"
  },
  {
      "question": "Как добавить несколько элементов в массив?",
      "options": [
          "array.addAll(elements)",
          "array.push(...elements)",
          "array.append(elements)",
          "array.insertAll(elements)"
      ],
      "correctAnswer": 1,
      "explanation": "push() с оператором spread (...) добавляет несколько элементов в конец массива.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Number.toFixed()?",
      "options": [
          "Метод для округления числа до заданного количества знаков",
          "Метод для преобразования строки в число",
          "Метод для проверки, является ли значение числом",
          "Метод для генерации случайного числа"
      ],
      "correctAnswer": 0,
      "explanation": "toFixed(n) округляет число до n знаков после запятой и возвращает строку.",
      "theme": "js"
  },
  {
      "question": "Как получить текущий timestamp в JavaScript?",
      "options": [
          "Date.now()",
          "new Date().timestamp()",
          "Time.now()",
          "Date.current()"
      ],
      "correctAnswer": 0,
      "explanation": "Date.now() возвращает текущий timestamp в миллисекундах с 1 января 1970 года.",
      "theme": "js"
  },
  {
      "question": "Что такое метод Object.values()?",
      "options": [
          "Метод для получения массива значений объекта",
          "Метод для сортировки объекта",
          "Метод для объединения объектов",
          "Метод для удаления значений"
      ],
      "correctAnswer": 0,
      "explanation": "Object.values() возвращает массив значений перечисляемых свойств объекта.",
      "theme": "js"
  },
  {
      "question": "Как проверить, является ли значение числом?",
      "options": [
          "typeof value === 'number' && !isNaN(value)",
          "value.isNumber()",
          "Number.isNumber(value)",
          "value instanceof Number"
      ],
      "correctAnswer": 0,
      "explanation": "Проверка typeof и !isNaN исключает NaN, обеспечивая, что значение является числом.",
      "theme": "js"
  },
  {
      "question": "Что такое метод String.trim()?",
      "options": [
          "Метод для удаления пробелов с начала и конца строки",
          "Метод для обрезки строки до заданной длины",
          "Метод для замены пробелов",
          "Метод для преобразования строки"
      ],
      "correctAnswer": 0,
      "explanation": "trim() удаляет пробелы (и другие пробельные символы) с начала и конца строки.",
      "theme": "js"
  },
  {
      "question": "Как получить доступ к элементу по индексу в NodeList?",
      "options": [
          "nodeList[index]",
          "nodeList.get(index)",
          "nodeList.item(index)",
          "nodeList.at(index)"
      ],
      "correctAnswer": 0,
      "explanation": "NodeList поддерживает доступ по индексу через nodeList[index] или nodeList.item(index).",
      "theme": "js"
    },
    {
      "question": "Что такое HTML?",
      "options": [
        "Язык программирования",
        "Язык разметки гипертекста",
        "Система управления базами данных",
        "Библиотека для стилизации"
      ],
      "correctAnswer": 1,
      "explanation": "HTML (HyperText Markup Language) — это язык разметки, используемый для создания структуры веб-страниц.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания заголовка первого уровня?",
      "options": [
        "<header>",
        "<h1>",
        "<title>",
        "<h>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <h1> используется для создания заголовка первого уровня, самого крупного по умолчанию.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает основной контент страницы?",
      "options": [
        "<body>",
        "<main>",
        "<section>",
        "<article>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <main> определяет основной контент страницы, который должен быть уникальным.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут указывает адрес ссылки в теге <a>?",
      "options": [
        "src",
        "href",
        "link",
        "url"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут href (hypertext reference) задает URL, на который ведет ссылка.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для вставки изображения?",
      "options": [
        "<img>",
        "<image>",
        "<picture>",
        "<src>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <img> используется для вставки изображений, с атрибутом src для указания пути к файлу.",
      "theme": "html"
    },
    {
      "question": "Что делает атрибут alt в теге <img>?",
      "options": [
        "Задает размер изображения",
        "Указывает альтернативный текст",
        "Определяет стиль изображения",
        "Задает путь к изображению"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут alt предоставляет текстовое описание изображения для доступности и поисковых систем.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания ненумерованного списка?",
      "options": [
        "<ol>",
        "<ul>",
        "<li>",
        "<list>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <ul> создает ненумерованный (маркированный) список, элементы которого оборачиваются в <li>.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания нумерованного списка?",
      "options": [
        "<ol>",
        "<ul>",
        "<li>",
        "<dl>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <ol> создает нумерованный (упорядоченный) список, элементы которого оборачиваются в <li>.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает заголовок HTML-документа?",
      "options": [
        "<head>",
        "<title>",
        "<header>",
        "<h1>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <title> задает заголовок документа, отображаемый на вкладке браузера.",
      "theme": "html"
    },
    {
      "question": "Какой тег определяет метаданные документа?",
      "options": [
        "<meta>",
        "<head>",
        "<info>",
        "<data>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <meta> используется для указания метаданных, таких как кодировка или описание страницы.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут указывает кодировку документа?",
      "options": [
        "<meta charset='UTF-8'>",
        "<meta encoding='UTF-8'>",
        "<meta type='UTF-8'>",
        "<meta lang='UTF-8'>"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут charset в теге <meta> задает кодировку документа, обычно UTF-8.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания таблицы?",
      "options": [
        "<table>",
        "<grid>",
        "<tr>",
        "<td>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <table> создает таблицу, внутри которой используются <tr> для строк и <td> для ячеек.",
      "theme": "html"
    },
    {
      "question": "Что делает тег <tr> в таблице?",
      "options": [
        "Создает ячейку",
        "Создает строку",
        "Создает столбец",
        "Создает заголовок таблицы"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <tr> (table row) определяет строку в таблице.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает ячейку заголовка в таблице?",
      "options": [
        "<td>",
        "<th>",
        "<tr>",
        "<caption>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <th> создает ячейку заголовка в таблице, обычно с жирным текстом и выравниванием по центру.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания формы?",
      "options": [
        "<form>",
        "<input>",
        "<button>",
        "<field>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <form> создает форму для ввода данных пользователем, с атрибутами action и method.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут формы указывает, куда отправлять данные?",
      "options": [
        "method",
        "action",
        "target",
        "submit"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут action задает URL, на который отправляются данные формы при отправке.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает поле ввода текста?",
      "options": [
        "<input type='text'>",
        "<text>",
        "<field>",
        "<input type='string'>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <input> с атрибутом type='text' создает однострочное текстовое поле.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает кнопку отправки формы?",
      "options": [
        "<button>",
        "<input type='submit'>",
        "<submit>",
        "<send>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <input type='submit'> создает кнопку для отправки данных формы.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для группировки элементов формы?",
      "options": [
        "<group>",
        "<fieldset>",
        "<form>",
        "<section>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <fieldset> группирует связанные элементы формы, часто с <legend> для заголовка.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает подпись для группы элементов формы?",
      "options": [
        "<label>",
        "<legend>",
        "<caption>",
        "<title>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <legend> задает подпись для группы элементов, обернутых в <fieldset>.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания выпадающего списка?",
      "options": [
        "<select>",
        "<dropdown>",
        "<list>",
        "<option>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <select> создает выпадающий список, а <option> задает элементы списка.",
      "theme": "html"
    },
    {
      "question": "Какой тег определяет элемент выпадающего списка?",
      "options": [
        "<item>",
        "<option>",
        "<select>",
        "<value>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <option> задает отдельный элемент внутри <select> для выпадающего списка.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут указывает выбранный по умолчанию элемент в <select>?",
      "options": [
        "selected",
        "default",
        "checked",
        "value"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут selected в теге <option> указывает, что этот элемент выбран по умолчанию.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает многострочное текстовое поле?",
      "options": [
        "<input type='textarea'>",
        "<textarea>",
        "<text>",
        "<input type='multiline'>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <textarea> создает многострочное поле для ввода текста.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут задает язык документа?",
      "options": [
        "lang",
        "language",
        "locale",
        "dir"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут lang в теге <html> задает язык документа, например, lang='en' для английского.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для семантического выделения текста?",
      "options": [
        "<b>",
        "<strong>",
        "<i>",
        "<em>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <strong> выделяет текст как важный, обычно отображая его жирным шрифтом.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для курсивного текста с семантическим акцентом?",
      "options": [
        "<i>",
        "<em>",
        "<italic>",
        "<b>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <em> выделяет текст с акцентом, обычно отображая его курсивом.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает горизонтальную линию?",
      "options": [
        "<hr>",
        "<line>",
        "<br>",
        "<divider>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <hr> создает горизонтальную линию для разделения контента.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для переноса строки?",
      "options": [
        "<br>",
        "<nl>",
        "<break>",
        "<line>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <br> создает перенос строки в тексте без начала нового абзаца.",
      "theme": "html"
    },
    {
      "question": "Какой тег определяет абзац?",
      "options": [
        "<p>",
        "<div>",
        "<span>",
        "<text>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <p> создает абзац текста, обычно с отступами сверху и снизу.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для вставки видео?",
      "options": [
        "<video>",
        "<media>",
        "<movie>",
        "<clip>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <video> используется для вставки видеоконтента с атрибутами src или <source>.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для вставки аудио?",
      "options": [
        "<audio>",
        "<sound>",
        "<media>",
        "<track>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <audio> используется для вставки аудиоконтента с атрибутами src или <source>.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <video> включает элементы управления?",
      "options": [
        "controls",
        "play",
        "ui",
        "showcontrols"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут controls добавляет стандартные элементы управления, такие как воспроизведение и громкость.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для определения навигационного меню?",
      "options": [
        "<nav>",
        "<menu>",
        "<links>",
        "<header>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <nav> определяет блок навигационных ссылок, таких как меню сайта.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает футер страницы?",
      "options": [
        "<footer>",
        "<bottom>",
        "<end>",
        "<section>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <footer> определяет нижнюю часть страницы, обычно содержащую авторские права или контакты.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания статьи?",
      "options": [
        "<article>",
        "<post>",
        "<content>",
        "<section>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <article> определяет независимый, самодостаточный контент, например, новость или пост.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для группировки контента?",
      "options": [
        "<div>",
        "<group>",
        "<block>",
        "<container>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <div> — универсальный контейнер для группировки и стилизации контента.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для выделения инлайн-элементов?",
      "options": [
        "<span>",
        "<div>",
        "<block>",
        "<inline>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <span> используется для выделения или стилизации части текста внутри строки.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут задает уникальный идентификатор элемента?",
      "options": [
        "class",
        "id",
        "name",
        "key"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут id задает уникальный идентификатор для элемента, используемый в CSS и JavaScript.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут задает класс для стилизации?",
      "options": [
        "style",
        "class",
        "id",
        "type"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут class задает один или несколько классов для стилизации через CSS.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для вставки JavaScript в HTML?",
      "options": [
        "<script>",
        "<js>",
        "<code>",
        "<javascript>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <script> используется для вставки или подключения JavaScript-кода.",
      "theme": "html"
    },
    {
      "question": "Какой тег подключает внешний CSS-файл?",
      "options": [
        "<style>",
        "<link>",
        "<css>",
        "<script>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <link> с атрибутами rel='stylesheet' и href подключает внешний CSS-файл.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <link> указывает тип подключаемого ресурса?",
      "options": [
        "type",
        "rel",
        "href",
        "src"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут rel, например, rel='stylesheet', указывает отношение между документом и ресурсом.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для определения стилей внутри HTML?",
      "options": [
        "<style>",
        "<css>",
        "<format>",
        "<design>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <style> содержит CSS-правила для стилизации элементов документа.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает описание для списка определений?",
      "options": [
        "<dt>",
        "<dd>",
        "<dl>",
        "<term>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <dd> задает описание термина в списке определений, созданном с помощью <dl>.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает термин в списке определений?",
      "options": [
        "<dt>",
        "<dd>",
        "<dl>",
        "<def>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <dt> задает термин в списке определений, за которым следует описание в <dd>.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает список определений?",
      "options": [
        "<dl>",
        "<ul>",
        "<ol>",
        "<list>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <dl> создает список определений, содержащий пары терминов (<dt>) и описаний (<dd>).",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <input> делает поле обязательным?",
      "options": [
        "required",
        "mandatory",
        "validate",
        "must"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут required делает поле ввода обязательным для заполнения перед отправкой формы.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания радиокнопки?",
      "options": [
        "<input type='radio'>",
        "<input type='checkbox'>",
        "<radio>",
        "<button>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <input type='radio'> создает радиокнопку для выбора одного варианта из группы.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут группирует радиокнопки?",
      "options": [
        "group",
        "name",
        "id",
        "class"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут name с одинаковым значением группирует радиокнопки, позволяя выбрать только одну.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает флажок (checkbox)?",
      "options": [
        "<input type='checkbox'>",
        "<input type='radio'>",
        "<check>",
        "<input type='toggle'>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <input type='checkbox'> создает флажок для множественного выбора.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут указывает начальное значение поля ввода?",
      "options": [
        "value",
        "default",
        "placeholder",
        "text"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут value задает начальное значение поля ввода, например, в <input>.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут задает подсказку в поле ввода?",
      "options": [
        "hint",
        "placeholder",
        "tooltip",
        "title"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут placeholder отображает подсказку в поле ввода до ввода текста.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает область для интерактивного контента?",
      "options": [
        "<canvas>",
        "<draw>",
        "<graphic>",
        "<svg>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <canvas> создает область для рисования графики с помощью JavaScript.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для вставки SVG-графики?",
      "options": [
        "<svg>",
        "<canvas>",
        "<graphic>",
        "<vector>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <svg> используется для создания масштабируемой векторной графики.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <img> задает ширину изображения?",
      "options": [
        "width",
        "size",
        "w",
        "length"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут width задает ширину изображения в пикселях или процентах.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания заголовка таблицы?",
      "options": [
        "<caption>",
        "<title>",
        "<header>",
        "<th>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <caption> задает заголовок таблицы, отображаемый над или под таблицей.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут объединяет ячейки по горизонтали в таблице?",
      "options": [
        "colspan",
        "rowspan",
        "merge",
        "span"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут colspan объединяет несколько ячеек по горизонтали в одну.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут объединяет ячейки по вертикали в таблице?",
      "options": [
        "rowspan",
        "colspan",
        "merge",
        "span"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут rowspan объединяет несколько ячеек по вертикали в одну.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает содержимое, которое отображается, если видео не поддерживается?",
      "options": [
        "<fallback>",
        "<source>",
        "<track>",
        "Текст внутри <video>"
      ],
      "correctAnswer": 3,
      "explanation": "Текст, размещенный внутри тега <video>, отображается, если браузер не поддерживает видео.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает субтитры для видео?",
      "options": [
        "<track>",
        "<subtitle>",
        "<caption>",
        "<text>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <track> с атрибутом kind='subtitles' задает субтитры или другие текстовые дорожки.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <form> задает метод отправки данных?",
      "options": [
        "method",
        "action",
        "type",
        "send"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут method задает HTTP-метод отправки формы, например, GET или POST.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает область для встраивания внешнего контента?",
      "options": [
        "<iframe>",
        "<embed>",
        "<object>",
        "<frame>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <iframe> встраивает внешний контент, такой как веб-страницы или видео, в документ.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <iframe> задает источник контента?",
      "options": [
        "src",
        "href",
        "link",
        "url"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут src задает URL встраиваемого контента для <iframe>.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для выделения цитаты?",
      "options": [
        "<quote>",
        "<blockquote>",
        "<q>",
        "<cite>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <blockquote> выделяет длинные цитаты, обычно с отступом.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для коротких цитат в тексте?",
      "options": [
        "<q>",
        "<blockquote>",
        "<cite>",
        "<quote>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <q> выделяет короткие цитаты, обычно добавляя кавычки.",
      "theme": "html"
    },
    {
      "question": "Какой тег указывает источник цитаты?",
      "options": [
        "<cite>",
        "<source>",
        "<ref>",
        "<link>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <cite> указывает источник цитаты, например, название книги или автора.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут задает направление текста?",
      "options": [
        "dir",
        "align",
        "lang",
        "text"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут dir задает направление текста, например, dir='rtl' для письма справа налево.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает область для вывода результата формы?",
      "options": [
        "<output>",
        "<result>",
        "<display>",
        "<value>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <output> отображает результат вычислений или действий в форме.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <input> задает максимальную длину текста?",
      "options": [
        "maxlength",
        "length",
        "size",
        "limit"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут maxlength ограничивает количество символов, вводимых в поле.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает область для прогресс-бара?",
      "options": [
        "<progress>",
        "<meter>",
        "<bar>",
        "<status>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <progress> создает индикатор выполнения задачи, например, загрузки.",
      "theme": "html"
    },
    {
      "question": "Какой тег отображает измеряемое значение в диапазоне?",
      "options": [
        "<meter>",
        "<progress>",
        "<range>",
        "<value>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <meter> отображает значение в заданном диапазоне, например, уровень заряда.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <input> задает тип поля для выбора файла?",
      "options": [
        "type='file'",
        "type='upload'",
        "type='attachment'",
        "type='select'"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <input type='file'> создает поле для выбора и загрузки файлов.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает область для всплывающих подсказок?",
      "options": [
        "<details>",
        "<summary>",
        "<tooltip>",
        "<info>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <details> создает раскрывающийся блок с дополнительной информацией.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает заголовок для <details>?",
      "options": [
        "<summary>",
        "<title>",
        "<header>",
        "<caption>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <summary> задает видимый заголовок для содержимого тега <details>.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <a> открывает ссылку в новой вкладке?",
      "options": [
        "target='_blank'",
        "newtab",
        "open='new'",
        "window='blank'"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут target='_blank' открывает ссылку в новой вкладке или окне.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для выделения кода?",
      "options": [
        "<code>",
        "<pre>",
        "<kbd>",
        "<samp>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <code> выделяет фрагменты кода, обычно с моноширинным шрифтом.",
      "theme": "html"
    },
    {
      "question": "Какой тег сохраняет форматирование текста, включая пробелы?",
      "options": [
        "<pre>",
        "<code>",
        "<text>",
        "<format>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <pre> сохраняет пробелы и переносы строк, как они написаны в коде.",
      "theme": "html"
    },
    {
      "question": "Какой тег выделяет текст, вводимый пользователем?",
      "options": [
        "<kbd>",
        "<code>",
        "<samp>",
        "<input>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <kbd> выделяет текст, представляющий ввод пользователя, например, клавиши.",
      "theme": "html"
    },
    {
      "question": "Какой тег представляет вывод программы?",
      "options": [
        "<samp>",
        "<code>",
        "<kbd>",
        "<output>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <samp> выделяет текст, представляющий вывод программы или скрипта.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <input> задает шаблон ввода?",
      "options": [
        "pattern",
        "regex",
        "format",
        "validate"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут pattern задает регулярное выражение для проверки ввода в поле.",
      "theme": "html"
    },
    {
      "question": "Какой тег создает область для семантического раздела?",
      "options": [
        "<section>",
        "<div>",
        "<block>",
        "<part>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <section> определяет тематический раздел документа, часто с заголовком.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут указывает доступность элемента для редактирования?",
      "options": [
        "contenteditable",
        "editable",
        "modify",
        "write"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут contenteditable='true' позволяет пользователю редактировать содержимое элемента.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут скрывает элемент от рендеринга?",
      "options": [
        "hidden",
        "visible='false'",
        "display='none'",
        "show='false'"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут hidden скрывает элемент, эквивалентно CSS display: none.",
      "theme": "html"
    },
    {
      "question": "Какой тег используется для создания шаблона контента?",
      "options": [
        "<template>",
        "<pattern>",
        "<model>",
        "<blueprint>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <template> содержит контент, который не отображается, но может быть клонирован через JavaScript.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <meta> задает описание страницы?",
      "options": [
        "name='description'",
        "content='description'",
        "meta='description'",
        "type='description'"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <meta name='description' content='...'> задает описание страницы для поисковых систем.",
      "theme": "html"
    },
    {
      "question": "Какой атрибут тега <input> отключает поле ввода?",
      "options": [
        "disabled",
        "readonly",
        "off",
        "locked"
      ],
      "correctAnswer": 0,
      "explanation": "Атрибут disabled делает поле ввода неактивным и недоступным для взаимодействия.",
      "theme": "html"
    },
    {
      "question": "Какой тег задает содержимое, отображаемое в неподдерживаемых браузерах?",
      "options": [
        "<noscript>",
        "<fallback>",
        "<nobrowser>",
        "<default>"
      ],
      "correctAnswer": 0,
      "explanation": "Тег <noscript> отображает содержимое, если JavaScript отключен в браузере.",
      "theme": "html"
    },
    {
      "question": "Что такое CSS?",
      "options": [
        "Язык программирования",
        "Каскадные таблицы стилей",
        "Язык разметки",
        "Библиотека для анимации"
      ],
      "correctAnswer": 1,
      "explanation": "CSS (Cascading Style Sheets) — это язык стилей, используемый для оформления и стилизации HTML-документов.",
      "theme": "css"
    },
    {
      "question": "Как подключить CSS к HTML-документу?",
      "options": [
        "<style src='styles.css'>",
        "<link rel='stylesheet' href='styles.css'>",
        "<css href='styles.css'>",
        "<script src='styles.css'>"
      ],
      "correctAnswer": 1,
      "explanation": "Тег <link> с атрибутами rel='stylesheet' и href подключает внешний CSS-файл к HTML.",
      "theme": "css"
    },
    {
      "question": "Где в HTML-документе размещается внутренний CSS?",
      "options": [
        "В теге <body>",
        "В теге <style> внутри <head>",
        "В теге <css>",
        "В атрибуте style тега <html>"
      ],
      "correctAnswer": 1,
      "explanation": "Внутренний CSS размещается в теге <style>, обычно внутри <head>, для стилизации документа.",
      "theme": "css"
    },
    {
      "question": "Как задать стиль непосредственно в HTML-элементе?",
      "options": [
        "Использовать атрибут css",
        "Использовать атрибут style",
        "Использовать тег <inline>",
        "Использовать атрибут class"
      ],
      "correctAnswer": 1,
      "explanation": "Атрибут style позволяет задавать инлайн-CSS непосредственно в HTML-элементе, например, style='color: red;'.",
      "theme": "css"
    },
    {
      "question": "Что такое CSS-селектор?",
      "options": [
        "Правило для анимации",
        "Элемент для выбора HTML-тегов",
        "Синтаксис для подключения стилей",
        "Атрибут для задания цвета"
      ],
      "correctAnswer": 1,
      "explanation": "Селектор определяет, к каким HTML-элементам применяются CSS-правила, например, по тегу, классу или ID.",
      "theme": "css"
    },
    {
      "question": "Какой селектор выбирает элемент по ID?",
      "options": [
        ".id",
        "#id",
        "id",
        "*id"
      ],
      "correctAnswer": 1,
      "explanation": "Селектор #id выбирает элемент с уникальным идентификатором, например, #myId.",
      "theme": "css"
    },
    {
      "question": "Какой селектор выбирает элементы по классу?",
      "options": [
        ".class",
        "#class",
        "class",
        "*class"
      ],
      "correctAnswer": 0,
      "explanation": "Селектор .class выбирает все элементы с указанным классом, например, .myClass.",
      "theme": "css"
    },
    {
      "question": "Какой селектор выбирает все элементы на странице?",
      "options": [
        "*",
        "all",
        "everything",
        "global"
      ],
      "correctAnswer": 0,
      "explanation": "Универсальный селектор * выбирает все элементы в документе.",
      "theme": "css"
    },
    {
      "question": "Что такое каскадирование в CSS?",
      "options": [
        "Порядок применения стилей по их приоритету",
        "Анимация элементов",
        "Группировка селекторов",
        "Подключение нескольких CSS-файлов"
      ],
      "correctAnswer": 0,
      "explanation": "Каскадирование определяет, какие стили применяются, основываясь на приоритете и порядке правил.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает цвет текста?",
      "options": [
        "color",
        "text-color",
        "font-color",
        "foreground"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство color задает цвет текста элемента, например, color: red;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает размер шрифта?",
      "options": [
        "font-size",
        "text-size",
        "size",
        "font-height"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство font-size задает размер шрифта, например, font-size: 16px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает семейство шрифта?",
      "options": [
        "font-family",
        "font-type",
        "text-family",
        "font"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство font-family задает шрифт текста, например, font-family: Arial, sans-serif;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает толщину шрифта?",
      "options": [
        "font-weight",
        "font-size",
        "font-style",
        "text-weight"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство font-weight задает толщину шрифта, например, font-weight: bold;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство делает текст курсивным?",
      "options": [
        "font-style: italic;",
        "text-style: italic;",
        "font: italic;",
        "style: italic;"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство font-style со значением italic делает текст курсивным.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает выравнивание текста?",
      "options": [
        "text-align",
        "align",
        "text-justify",
        "justify"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство text-align задает горизонтальное выравнивание текста, например, text-align: center;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает межбуквенный интервал?",
      "options": [
        "letter-spacing",
        "word-spacing",
        "text-spacing",
        "font-spacing"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство letter-spacing задает расстояние между буквами, например, letter-spacing: 2px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает межсловный интервал?",
      "options": [
        "word-spacing",
        "letter-spacing",
        "text-spacing",
        "space"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство word-spacing задает расстояние между словами, например, word-spacing: 5px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает высоту строки текста?",
      "options": [
        "line-height",
        "text-height",
        "font-height",
        "height"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство line-height задает высоту строки, влияя на межстрочный интервал, например, line-height: 1.5;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает фон элемента?",
      "options": [
        "background",
        "color",
        "fill",
        "bg"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство background задает фоновые характеристики, например, background: #fff;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает цвет фона?",
      "options": [
        "background-color",
        "color",
        "bg-color",
        "fill-color"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство background-color задает цвет фона элемента, например, background-color: blue;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает фоновое изображение?",
      "options": [
        "background-image",
        "image",
        "bg-image",
        "background-src"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство background-image задает изображение для фона, например, background-image: url('image.jpg');.",
      "theme": "css"
    },
    {
      "question": "Какое свойство управляет повторением фонового изображения?",
      "options": [
        "background-repeat",
        "image-repeat",
        "bg-repeat",
        "repeat"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство background-repeat определяет, повторяется ли изображение, например, background-repeat: no-repeat;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает позицию фонового изображения?",
      "options": [
        "background-position",
        "image-position",
        "bg-position",
        "position"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство background-position задает положение фона, например, background-position: center;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает ширину элемента?",
      "options": [
        "width",
        "size",
        "w",
        "element-width"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство width задает ширину элемента, например, width: 200px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает высоту элемента?",
      "options": [
        "height",
        "size",
        "h",
        "element-height"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство height задает высоту элемента, например, height: 100px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает внешний отступ элемента?",
      "options": [
        "margin",
        "padding",
        "spacing",
        "border"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство margin задает внешний отступ, например, margin: 10px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает внутренний отступ элемента?",
      "options": [
        "padding",
        "margin",
        "spacing",
        "border"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство padding задает внутренний отступ, например, padding: 15px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает границу элемента?",
      "options": [
        "border",
        "outline",
        "edge",
        "frame"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство border задает стиль, ширину и цвет границы, например, border: 1px solid black;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает ширину границы?",
      "options": [
        "border-width",
        "border-size",
        "border-thickness",
        "width"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство border-width задает толщину границы, например, border-width: 2px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает стиль границы?",
      "options": [
        "border-style",
        "border-type",
        "border-format",
        "style"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство border-style задает стиль границы, например, border-style: dashed;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает цвет границы?",
      "options": [
        "border-color",
        "border-shade",
        "border-hue",
        "color"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство border-color задает цвет границы, например, border-color: red;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает скругление углов элемента?",
      "options": [
        "border-radius",
        "corner-radius",
        "border-curve",
        "round"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство border-radius задает радиус скругления углов, например, border-radius: 10px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство управляет отображением элемента?",
      "options": [
        "display",
        "visibility",
        "show",
        "render"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство display определяет, как элемент отображается, например, display: block; или display: none;.",
      "theme": "css"
    },
    {
      "question": "Какое значение display делает элемент блочным?",
      "options": [
        "block",
        "inline",
        "flex",
        "grid"
      ],
      "correctAnswer": 0,
      "explanation": "Значение display: block; делает элемент блочным, занимающим всю ширину контейнера.",
      "theme": "css"
    },
    {
      "question": "Какое значение display делает элемент строчным?",
      "options": [
        "inline",
        "block",
        "flex",
        "grid"
      ],
      "correctAnswer": 0,
      "explanation": "Значение display: inline; делает элемент строчным, не создавая перенос строки.",
      "theme": "css"
    },
    {
      "question": "Какое значение display скрывает элемент?",
      "options": [
        "none",
        "hidden",
        "invisible",
        "off"
      ],
      "correctAnswer": 0,
      "explanation": "Значение display: none; скрывает элемент, убирая его из потока документа.",
      "theme": "css"
    },
    {
      "question": "Какое свойство управляет видимостью элемента?",
      "options": [
        "visibility",
        "display",
        "opacity",
        "show"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство visibility управляет видимостью, например, visibility: hidden; скрывает элемент, сохраняя его место.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает прозрачность элемента?",
      "options": [
        "opacity",
        "visibility",
        "transparent",
        "alpha"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство opacity задает прозрачность от 0 (полностью прозрачный) до 1, например, opacity: 0.5;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает позиционирование элемента?",
      "options": [
        "position",
        "placement",
        "layout",
        "align"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство position определяет тип позиционирования, например, position: relative; или position: absolute;.",
      "theme": "css"
    },
    {
      "question": "Какое значение position убирает элемент из потока документа?",
      "options": [
        "absolute",
        "relative",
        "static",
        "fixed"
      ],
      "correctAnswer": 0,
      "explanation": "Значение position: absolute; убирает элемент из потока, позиционируя его относительно ближайшего позиционированного предка.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает смещение сверху для позиционированного элемента?",
      "options": [
        "top",
        "margin-top",
        "offset-top",
        "position-top"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство top задает смещение сверху для элементов с position: absolute, fixed или relative.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает тень элемента?",
      "options": [
        "box-shadow",
        "shadow",
        "border-shadow",
        "element-shadow"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство box-shadow задает тень, например, box-shadow: 2px 2px 5px rgba(0,0,0,0.3);.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает тень текста?",
      "options": [
        "text-shadow",
        "shadow",
        "font-shadow",
        "text-effect"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство text-shadow задает тень текста, например, text-shadow: 1px 1px 2px black;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство управляет выравниванием flex-элементов по главной оси?",
      "options": [
        "justify-content",
        "align-items",
        "flex-align",
        "align-content"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство justify-content управляет выравниванием flex-элементов по главной оси, например, justify-content: center;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство управляет выравниванием flex-элементов по поперечной оси?",
      "options": [
        "align-items",
        "justify-content",
        "flex-align",
        "align-content"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство align-items управляет выравниванием flex-элементов по поперечной оси, например, align-items: center;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство включает flex-контейнер?",
      "options": [
        "display: flex;",
        "flex: on;",
        "layout: flex;",
        "display: inline-flex;"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство display: flex; превращает элемент в flex-контейнер, активируя flexbox.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает направление flex-элементов?",
      "options": [
        "flex-direction",
        "flex-flow",
        "direction",
        "flex-align"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство flex-direction задает направление главной оси, например, flex-direction: row; или column;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает перенос flex-элементов на новую строку?",
      "options": [
        "flex-wrap",
        "wrap",
        "flex-flow",
        "break"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство flex-wrap управляет переносом элементов, например, flex-wrap: wrap;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство включает grid-контейнер?",
      "options": [
        "display: grid;",
        "grid: on;",
        "layout: grid;",
        "display: inline-grid;"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство display: grid; превращает элемент в grid-контейнер, активируя CSS Grid.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает количество и размеры столбцов в grid?",
      "options": [
        "grid-template-columns",
        "grid-columns",
        "columns",
        "grid-layout"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство grid-template-columns задает структуру столбцов, например, grid-template-columns: 1fr 2fr;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает количество и размеры строк в grid?",
      "options": [
        "grid-template-rows",
        "grid-rows",
        "rows",
        "grid-layout"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство grid-template-rows задает структуру строк, например, grid-template-rows: 100px 200px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает промежутки между grid-элементами?",
      "options": [
        "gap",
        "grid-gap",
        "spacing",
        "margin"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство gap задает промежутки между grid-элементами, например, gap: 10px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство управляет анимацией элемента?",
      "options": [
        "animation",
        "transition",
        "animate",
        "effect"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство animation задает параметры анимации, например, animation: slide 2s ease-in-out;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство управляет плавным изменением стилей?",
      "options": [
        "transition",
        "animation",
        "transform",
        "effect"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство transition задает плавное изменение стилей, например, transition: all 0.3s ease;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает трансформацию элемента?",
      "options": [
        "transform",
        "transition",
        "animation",
        "rotate"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство transform изменяет внешний вид элемента, например, transform: rotate(45deg);.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает порядок наложения элементов?",
      "options": [
        "z-index",
        "layer",
        "stack",
        "order"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство z-index определяет порядок наложения элементов, например, z-index: 10;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает тип курсора при наведении?",
      "options": [
        "cursor",
        "pointer",
        "hover",
        "mouse"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство cursor задает тип курсора, например, cursor: pointer;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает режим обтекания элемента?",
      "options": [
        "float",
        "flow",
        "wrap",
        "clear"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство float определяет обтекание элемента, например, float: left;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство отменяет обтекание вокруг элемента?",
      "options": [
        "clear",
        "float",
        "overflow",
        "wrap"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство clear отменяет обтекание, например, clear: both;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает максимальную ширину элемента?",
      "options": [
        "max-width",
        "width-max",
        "limit-width",
        "max-size"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство max-width ограничивает максимальную ширину, например, max-width: 500px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает минимальную высоту элемента?",
      "options": [
        "min-height",
        "height-min",
        "limit-height",
        "min-size"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство min-height задает минимальную высоту, например, min-height: 100px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство управляет поведением содержимого при переполнении?",
      "options": [
        "overflow",
        "clip",
        "scroll",
        "hidden"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство overflow управляет переполнением, например, overflow: auto; добавляет прокрутку.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает тип списка для <ul> или <ol>?",
      "options": [
        "list-style-type",
        "list-type",
        "style-list",
        "list-marker"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство list-style-type задает тип маркера списка, например, list-style-type: disc;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает изображение для маркера списка?",
      "options": [
        "list-style-image",
        "list-image",
        "marker-image",
        "list-style"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство list-style-image задает изображение для маркера, например, list-style-image: url('marker.png');.",
      "theme": "css"
    },
    {
      "question": "Какое свойство центрирует блочный элемент по горизонтали?",
      "options": [
        "margin: auto;",
        "align: center;",
        "center: true;",
        "text-align: center;"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство margin: auto; с заданной шириной центрирует блочный элемент по горизонтали.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает начертание текста, например, подчеркивание?",
      "options": [
        "text-decoration",
        "font-decoration",
        "text-style",
        "decoration"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство text-decoration задает оформление текста, например, text-decoration: underline;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает радиус тени элемента?",
      "options": [
        "box-shadow: blur;",
        "shadow-radius",
        "blur-radius",
        "box-shadow"
      ],
      "correctAnswer": 0,
      "explanation": "В свойстве box-shadow третий параметр задает радиус размытия, например, box-shadow: 0 0 10px black;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает порядок элементов во flex-контейнере?",
      "options": [
        "order",
        "flex-order",
        "position",
        "z-index"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство order задает порядок flex-элементов, например, order: 1;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает базовую ширину flex-элемента?",
      "options": [
        "flex-basis",
        "flex-size",
        "basis",
        "width"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство flex-basis задает начальный размер flex-элемента, например, flex-basis: 200px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает способность flex-элемента расти?",
      "options": [
        "flex-grow",
        "flex-expand",
        "grow",
        "flex-size"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство flex-grow определяет, насколько элемент может увеличиваться, например, flex-grow: 1;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает способность flex-элемента сжиматься?",
      "options": [
        "flex-shrink",
        "flex-reduce",
        "shrink",
        "flex-size"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство flex-shrink определяет, насколько элемент может сжиматься, например, flex-shrink: 1;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает выравнивание grid-элементов по горизонтали?",
      "options": [
        "justify-items",
        "align-items",
        "grid-justify",
        "justify-content"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство justify-items выравнивает grid-элементы по горизонтали, например, justify-items: center;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает выравнивание grid-элементов по вертикали?",
      "options": [
        "align-items",
        "justify-items",
        "grid-align",
        "align-content"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство align-items выравнивает grid-элементы по вертикали, например, align-items: center;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает длительность transition?",
      "options": [
        "transition-duration",
        "transition-time",
        "duration",
        "transition-length"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство transition-duration задает время перехода, например, transition-duration: 0.5s;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает функцию времени для transition?",
      "options": [
        "transition-timing-function",
        "transition-ease",
        "timing",
        "transition-curve"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство transition-timing-function задает скорость изменения, например, transition-timing-function: ease-in;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает начальную точку трансформации?",
      "options": [
        "transform-origin",
        "transform-point",
        "origin",
        "transform-start"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство transform-origin задает точку трансформации, например, transform-origin: center;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает перспективу для 3D-трансформаций?",
      "options": [
        "perspective",
        "depth",
        "3d",
        "view"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство perspective задает глубину перспективы, например, perspective: 1000px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает стиль обводки элемента?",
      "options": [
        "outline",
        "border",
        "stroke",
        "frame"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство outline задает обводку вокруг элемента, не влияя на поток, например, outline: 2px solid blue;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает смещение обводки?",
      "options": [
        "outline-offset",
        "outline-margin",
        "offset",
        "outline-space"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство outline-offset задает расстояние обводки от границы, например, outline-offset: 5px;.",
      "theme": "css"
    },
    {
      "question": "Какое свойство задает режим наложения элементов?",
      "options": [
        "mix-blend-mode",
        "blend-mode",
        "overlay",
        "mix-mode"
      ],
      "correctAnswer": 0,
      "explanation": "Свойство mix-blend-mode задает режим наложения, например, mix-blend-mode: multiply;.",
      "theme": "css"
    }
  ]